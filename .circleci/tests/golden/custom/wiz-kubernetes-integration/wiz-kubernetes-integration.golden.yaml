---
# Source: wiz-kubernetes-integration/charts/wiz-admission-controller/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-test-wiz-admission-controller
  namespace: "release-helm-namespace"
  labels:
    helm.sh/chart: "GOLDEN_STATIC_VALUE"
    app.kubernetes.io/chartName: wiz-admission-controller
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/version: "2.6"
    app.kubernetes.io/managed-by: Helm
---
# Source: wiz-kubernetes-integration/charts/wiz-kubernetes-connector/charts/wiz-broker/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: wiz-broker
  namespace: "release-helm-namespace"
  labels:
    helm.sh/chart: "GOLDEN_STATIC_VALUE"
    app.kubernetes.io/name: wiz-broker
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/version: "2.5"
    app.kubernetes.io/managed-by: Helm
---
# Source: wiz-kubernetes-integration/charts/wiz-admission-controller/templates/serviceaccount.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-test-wiz-admission-controller-namespace-reader
  namespace: "release-helm-namespace"
  labels:
    helm.sh/chart: "GOLDEN_STATIC_VALUE"
    app.kubernetes.io/chartName: wiz-admission-controller
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/version: "2.6"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["get", "list"]
---
# Source: wiz-kubernetes-integration/charts/wiz-kubernetes-connector/templates/service-account-cluster-reader.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: wiz-cluster-reader
  labels:
    helm.sh/chart: "GOLDEN_STATIC_VALUE"
    app.kubernetes.io/name: wiz-kubernetes-connector
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/version: "2.5"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: ["*"]
    resources: ["*"]
    verbs: ["get", "list", "watch"]
---
# Source: wiz-kubernetes-integration/charts/wiz-admission-controller/templates/serviceaccount.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-test-wiz-admission-controller-namespace
  namespace: "release-helm-namespace"
  labels:
    helm.sh/chart: "GOLDEN_STATIC_VALUE"
    app.kubernetes.io/chartName: wiz-admission-controller
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/version: "2.6"
    app.kubernetes.io/managed-by: Helm
subjects:
- kind: ServiceAccount
  name: release-test-wiz-admission-controller
  namespace: "release-helm-namespace"
roleRef:
  kind: ClusterRole
  name: release-test-wiz-admission-controller-namespace-reader
  apiGroup: rbac.authorization.k8s.io
---
# Source: wiz-kubernetes-integration/charts/wiz-kubernetes-connector/templates/service-account-cluster-reader.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: wiz-cluster-reader
  labels:
    helm.sh/chart: "GOLDEN_STATIC_VALUE"
    app.kubernetes.io/name: wiz-kubernetes-connector
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/version: "2.5"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name:  wiz-cluster-reader
subjects:
- kind: ServiceAccount
  name: wiz-cluster-reader
  namespace: "release-helm-namespace"
---
# Source: wiz-kubernetes-integration/charts/wiz-admission-controller/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-test-wiz-admission-controller
  namespace: "release-helm-namespace"
  labels:
    helm.sh/chart: "GOLDEN_STATIC_VALUE"
    app.kubernetes.io/chartName: wiz-admission-controller
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/version: "2.6"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: wiz-admission-controller
spec:
  type: ClusterIP
  ports:
    - port: 443
      targetPort: 10250
      protocol: TCP
  selector:
    app.kubernetes.io/chartName: wiz-admission-controller
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/name: wiz-admission-controller
---
# Source: wiz-kubernetes-integration/charts/wiz-admission-controller/templates/deploymentenforcement.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-test-wiz-admission-controller
  namespace: "release-helm-namespace"
  labels:
    helm.sh/chart: "GOLDEN_STATIC_VALUE"
    app.kubernetes.io/chartName: wiz-admission-controller
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/version: "2.6"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: wiz-admission-controller
spec:
  replicas: 10
  selector:
    matchLabels:
      app.kubernetes.io/chartName: wiz-admission-controller
      app.kubernetes.io/instance: release-test
      app.kubernetes.io/name: wiz-admission-controller
  template:
    metadata:
      annotations:
        rollme.proxyHash: 08766d42378ee5793f5f58973d800d4b064e466ae67684e16b1a56ab1c5dedfc
        rollme.wizApiTokenHash: 9f27ffdc43a7a5a113f02c056c1a93cc136b829b90f30a93d5527af25dd6e325
        rollme.webhookCert: "GOLDEN_STATIC_VALUE"
      labels:
        
        helm.sh/chart: "GOLDEN_STATIC_VALUE"
        app.kubernetes.io/chartName: wiz-admission-controller
        app.kubernetes.io/instance: release-test
        app.kubernetes.io/version: "2.6"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: wiz-admission-controller
    spec:
      imagePullSecrets:
        - name: aaaa
      serviceAccountName: release-test-wiz-admission-controller
      securityContext:
        {}
      terminationGracePeriodSeconds: 60
      containers:
        - name: wiz-admission-controller
          securityContext:
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          image: "wiziopublic.azurecr.io/wiz-app/wiz-admission-controller:2.6"
          imagePullPolicy: Always
          ports:
          - containerPort: 10250
          readinessProbe:
            httpGet:
              path: /ready
              port: 8000
              scheme: HTTPS
            failureThreshold: 1
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 30
          livenessProbe:
            httpGet:
              path: /live
              port: 8000
              scheme: HTTPS
            failureThreshold: 3
            initialDelaySeconds: 5
            timeoutSeconds: 30
          startupProbe:
            httpGet:
              path: /ready
              port: 8000
              scheme: HTTPS
            failureThreshold: 30
            initialDelaySeconds: 5
            timeoutSeconds: 300

          command:
          - "/usr/bin/wiz-admission-controller"
          - "--readiness-port=8000"
          # Server flags
          - "--port=10250"
          - "--tls-private-key-file=/var/server-certs/tls.key"
          - "--tls-cert-file=/var/server-certs/tls.crt"
          # Webhook flags # check opaWebhook for backward compatibility
          - "--error-enforcement-method=AUDIT"
          # Kubernetes API server flags
          - "--namespace-cache-ttl=10m"
          # OPA webhook flags
          - "--misconfiguration-enabled=true"
          
            
          # Image integrity webhook flags
          # Disable K8S audit logs webhook
          - "--kubernetes-audit-logs-enabled=false"
          env:
          - name: WIZ_CLIENT_ID
            valueFrom:
              secretKeyRef:
                name: wiz-api-token
                key: clientId
                optional: false
          - name: WIZ_CLIENT_TOKEN
            valueFrom:
              secretKeyRef:
                name: wiz-api-token
                key: clientToken
                optional: false
          - name: WIZ_ENV
            value: 
          - name: WIZ_IMAGE_INTEGRITY_PATCH_IMAGE_DIGEST_ANNOTATION
            value: "true"
          - name: LOG_LEVEL
            value: info
          # For running pod with read only file system we write all the cache files to /var/cache volume mount
          - name: TUF_ROOT
            value: "/var/cache/.sigstore"
          - name: AWS_ECR_CACHE_DIR
            value: "/var/cache/.ecr"
          - name: WIZ_RUNTIME_METADATA_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: WIZ_RUNTIME_METADATA_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: K8S_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: WIZ_TERMINATION_GRACE_PERIOD
            value: "60s"
          ## Image registry client flags
          - name: WIZ_REGISTRY_IGNORE_SECRET_MISSING_ERROR
            value: "false"
          - name: WIZ_REGISTRY_IMAGE_PULL_SECRET_RELOAD_INTERVAL
            value: "5m"
          ## Enable debug webhook that only logs the request
          resources:
            
            {}
          volumeMounts:
          - mountPath: /var/cache
            name: cache
          - mountPath: /var/server-certs
            name: server-certs
            readOnly: true
      volumes:
        - name: cache
          emptyDir: {}
        - name: server-certs
          secret:
            defaultMode: 444
            secretName: release-test-wiz-admission-controller-cert
---
# Source: wiz-kubernetes-integration/charts/wiz-kubernetes-connector/charts/wiz-broker/templates/wiz-broker-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-test-agent
  namespace: "release-helm-namespace"
  labels:
    helm.sh/chart: "GOLDEN_STATIC_VALUE"
    app.kubernetes.io/name: wiz-broker
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/version: "2.5"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: wiz-broker
      app.kubernetes.io/instance: release-test
  template:
    metadata:
      annotations:
        rollme: "GOLDEN_STATIC_VALUE"
      labels:
        helm.sh/chart: "GOLDEN_STATIC_VALUE"
        app.kubernetes.io/name: wiz-broker
        app.kubernetes.io/instance: release-test
        app.kubernetes.io/version: "2.5"
        app.kubernetes.io/managed-by: Helm
    spec:
      imagePullSecrets:
        - name: aaaa
      serviceAccountName: wiz-broker
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
      volumes:
        - name: connector-data
          secret:
            secretName: release-test-connector
            items:
              - key: connectorData
                path: data
      containers:
        - name: wiz-broker
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 1000
          image: wiziopublic.azurecr.io/wiz-app/wiz-broker:2.5
          imagePullPolicy: Always
          volumeMounts:
          - name: connector-data
            mountPath: /etc/connectorData
            readOnly: true
          args: [
            /etc/connectorData/data
          ]
          env:
          - name: LOG_LEVEL
            value: info
          - name: WIZ_ENV
            value: 
          - name: WIZ_CLIENT_ID
            valueFrom:
              secretKeyRef:
                name: wiz-api-token
                key: clientId
          - name: WIZ_CLIENT_TOKEN
            valueFrom:
              secretKeyRef:
                name: wiz-api-token
                key: clientToken
          - name: TARGET_IP
            value: kubernetes.default.svc.cluster.local
          - name: TARGET_PORT
            value: "443"
          resources:
            null
---
# Source: wiz-kubernetes-integration/charts/wiz-kubernetes-connector/templates/service-account-cluster-reader.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: wiz-cluster-reader
  namespace: "release-helm-namespace"
  labels:
    helm.sh/chart: "GOLDEN_STATIC_VALUE"
    app.kubernetes.io/name: wiz-kubernetes-connector
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/version: "2.5"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
---
# Source: wiz-kubernetes-integration/charts/wiz-kubernetes-connector/templates/service-account-modify-connector.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: wiz-auto-modify-connector
  namespace: "release-helm-namespace"
  labels:
    helm.sh/chart: "GOLDEN_STATIC_VALUE"
    app.kubernetes.io/name: wiz-kubernetes-connector
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/version: "2.5"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,pre-delete
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "-1"
---
# Source: wiz-kubernetes-integration/charts/wiz-admission-controller/templates/opawebhook.yaml
apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata:
  name: release-test-wiz-admission-controller-cert
  namespace: "release-helm-namespace"
  labels:
    helm.sh/chart: "GOLDEN_STATIC_VALUE"
    app.kubernetes.io/chartName: wiz-admission-controller
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/version: "2.6"
    app.kubernetes.io/managed-by: Helm
  annotations:
    # Using helm hook to create certs only for chart install
    "helm.sh/hook": "pre-install, pre-upgrade"
    "helm.sh/hook-delete-policy": "before-hook-creation"
data:
  tls.crt: "GOLDEN_STATIC_VALUE"
  tls.key: "GOLDEN_STATIC_VALUE"
---
# Source: wiz-kubernetes-integration/charts/wiz-kubernetes-connector/templates/secret-connector.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-test-connector
  namespace: "release-helm-namespace"
  labels:
    helm.sh/chart: "GOLDEN_STATIC_VALUE"
    app.kubernetes.io/name: wiz-kubernetes-connector
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/version: "2.5"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-install, pre-upgrade
    "helm.sh/hook-weight": "-1"
type: Opaque
data:
  connectorData: "e30="
---
# Source: wiz-kubernetes-integration/charts/wiz-kubernetes-connector/templates/service-account-cluster-reader.yaml
apiVersion: v1
kind: Secret
metadata:
  name: wiz-cluster-reader-token
  namespace: "release-helm-namespace"
  labels:
    helm.sh/chart: "GOLDEN_STATIC_VALUE"
    app.kubernetes.io/name: wiz-kubernetes-connector
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/version: "2.5"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
    kubernetes.io/service-account.name: wiz-cluster-reader
type: kubernetes.io/service-account-token
---
# Source: wiz-kubernetes-integration/templates/secrets-wiz-api-token.yaml
apiVersion: v1
kind: Secret
metadata:
  name: wiz-api-token
  namespace: "release-helm-namespace"
  labels:
    helm.sh/chart: "GOLDEN_STATIC_VALUE"
    app.kubernetes.io/name: wiz-kubernetes-integration
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/managed-by: Helm
  annotations: # Secret used by per-install hook in wiz-kubernetes-connector
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-1"
stringData:
  clientId: "abcd"
  clientToken: "abcd"
---
# Source: wiz-kubernetes-integration/charts/wiz-kubernetes-connector/templates/service-account-modify-connector.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: wiz-auto-modify-connector
  namespace: "release-helm-namespace"
  labels:
    helm.sh/chart: "GOLDEN_STATIC_VALUE"
    app.kubernetes.io/name: wiz-kubernetes-connector
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/version: "2.5"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,pre-delete
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "-1"
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    resourceNames: ["release-test-connector"]
    verbs: ["update", "get"]
  - apiGroups: [""]
    resources: ["secrets"]
    resourceNames: [
      "wiz-api-token",
      "wiz-cluster-reader-token",
    ]
    verbs: ["get"]
---
# Source: wiz-kubernetes-integration/charts/wiz-kubernetes-connector/templates/service-account-modify-connector.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: wiz-auto-modify-connector
  namespace: "release-helm-namespace"
  labels:
    helm.sh/chart: "GOLDEN_STATIC_VALUE"
    app.kubernetes.io/name: wiz-kubernetes-connector
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/version: "2.5"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,pre-delete
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "-1"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name:  wiz-auto-modify-connector
subjects:
- kind: ServiceAccount
  name: wiz-auto-modify-connector
  namespace: "release-helm-namespace"
---
# Source: wiz-kubernetes-integration/charts/wiz-kubernetes-connector/templates/job-create-connector.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: wiz-kubernetes-connector-create-connector
  namespace: "release-helm-namespace"
  labels:
    helm.sh/chart: "GOLDEN_STATIC_VALUE"
    app.kubernetes.io/name: wiz-kubernetes-connector
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/version: "2.5"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded 
    rollme.wizApiTokenHash: ce8124bc1b0fbc0cb5cd47338ca0c7d5f5446d79936e443a201d96b192a7bd65
    rollme.proxyHash: 9aa53d69075371b3fa23ebeea2fd2416ea81fb533499d071ca2d576f17c7c886
    rollme.brokerHash: 115ba85431eeaf8db3ff2173aee02d16e67df1555d5e1ef74cfa7ac0d812cab2   

spec:
  ttlSecondsAfterFinished: 60
  manualSelector: true
  selector:
    matchLabels:
      app.kubernetes.io/name: wiz-kubernetes-connector
      app.kubernetes.io/instance: release-test
  backoffLimit: 1
  template:
    metadata:
      labels:
        
        helm.sh/chart: "GOLDEN_STATIC_VALUE"
        app.kubernetes.io/name: wiz-kubernetes-connector
        app.kubernetes.io/instance: release-test
        app.kubernetes.io/version: "2.5"
        app.kubernetes.io/managed-by: Helm
    spec:
      imagePullSecrets:
        - name: aaaa
      serviceAccountName: wiz-auto-modify-connector
      restartPolicy: "Never"
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
      containers:
        - name: wiz-connector-creator
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 1000
          image: wiziopublic.azurecr.io/wiz-app/wiz-broker:2.5
          imagePullPolicy: Always
          command:
            - "wiz-broker"
          args:
            
            - create-kubernetes-connector
            - --api-server-endpoint
            - "https://kubernetes.default.svc.cluster.local"
            - --secrets-namespace
            - "release-helm-namespace"
            - --service-account-token-secret-name
            - "wiz-cluster-reader-token"
            - --output-secret-name
            - "release-test-connector"
            - --is-on-prem=true
            - --connector-name
            - "test"
            - --service-type
            - "eks"
            - --wait=true
          env:
          - name: LOG_LEVEL
            value: info
          - name: WIZ_CLIENT_ID
            valueFrom:
              secretKeyRef:
                name: wiz-api-token
                key: clientId
                optional: false
          - name: WIZ_CLIENT_TOKEN
            valueFrom:
              secretKeyRef:
                name: wiz-api-token
                key: clientToken
                optional: false
          - name: WIZ_ENV
            value: 
          resources:
            null
---
# Source: wiz-kubernetes-integration/charts/wiz-kubernetes-connector/templates/job-delete-connector.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: wiz-kubernetes-connector-delete-connector
  namespace: "release-helm-namespace"
  labels:
    helm.sh/chart: "GOLDEN_STATIC_VALUE"
    app.kubernetes.io/name: wiz-kubernetes-connector
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/version: "2.5"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    rollme.proxyHash: 9aa53d69075371b3fa23ebeea2fd2416ea81fb533499d071ca2d576f17c7c886
    rollme.brokerHash: 115ba85431eeaf8db3ff2173aee02d16e67df1555d5e1ef74cfa7ac0d812cab2 

spec:
  ttlSecondsAfterFinished: 60
  manualSelector: true
  selector:
    matchLabels:
      app.kubernetes.io/name: wiz-kubernetes-connector
      app.kubernetes.io/instance: release-test
  backoffLimit: 1
  template:
    metadata:
      labels:
        
        helm.sh/chart: "GOLDEN_STATIC_VALUE"
        app.kubernetes.io/name: wiz-kubernetes-connector
        app.kubernetes.io/instance: release-test
        app.kubernetes.io/version: "2.5"
        app.kubernetes.io/managed-by: Helm
    spec:
      imagePullSecrets:
        - name: aaaa
      serviceAccountName: wiz-auto-modify-connector
      restartPolicy: "Never"
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
      containers:
        - name: wiz-connector-delete
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 1000
          image: wiziopublic.azurecr.io/wiz-app/wiz-broker:2.5
          imagePullPolicy: Always
          command: ["/bin/sh", "-c"]
          args:
            - >
              wiz-broker delete-kubernetes-connector 
              --input-secrets-namespace 
              "release-helm-namespace" 
              --input-secret-name 
              "release-test-connector" 
              || true
          env:
          - name: LOG_LEVEL
            value: info
          - name: WIZ_CLIENT_ID
            valueFrom:
              secretKeyRef:
                name: wiz-api-token
                key: clientId
                optional: false
          - name: WIZ_CLIENT_TOKEN
            valueFrom:
              secretKeyRef:
                name: wiz-api-token
                key: clientToken
                optional: false
          - name: WIZ_ENV
            value: ""
          resources:
            null
---
# Source: wiz-kubernetes-integration/charts/wiz-admission-controller/templates/opawebhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: release-test-wiz-admission-controller-misconfigurations
  namespace: "release-helm-namespace"
  labels:
    helm.sh/chart: "GOLDEN_STATIC_VALUE"
    app.kubernetes.io/chartName: wiz-admission-controller
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/version: "2.6"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": "post-install, post-upgrade"
    "helm.sh/hook-delete-policy": "before-hook-creation"
webhooks:
- name: misconfigurationsadmissionvalidator.wiz.io
  admissionReviewVersions: ["v1", "v1beta1"]
  clientConfig:
    service:
      namespace: release-helm-namespace
      name: release-test-wiz-admission-controller
      path: /opa-validator
      port: 443
    caBundle: "GOLDEN_STATIC_VALUE"
  rules:
    - apiGroups:
      - '*'
      apiVersions:
      - '*'
      operations:
      - CREATE
      - UPDATE
      resources:
      - namespaces
      - configmaps
      - ingresses
      - services
      - pods
      - deployments
      - jobs
      - cronjobs
      - replicasets
      - statefulsets
      - daemonsets
  namespaceSelector:
    matchExpressions:
    - key: kubernetes.io/metadata.name
      operator: NotIn
      values:
      - kube-system
      - kube-node-lease
  timeoutSeconds: 8
  failurePolicy: Ignore
  sideEffects: None
