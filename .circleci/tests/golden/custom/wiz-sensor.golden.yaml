---
# Source: wiz-sensor/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-test-wiz-sensor
  namespace: release-helm-namespace
  labels:
    
    helm.sh/chart: "REDACTED"
    image/tag: v1
    app.kubernetes.io/name: wiz-sensor
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/version: "1.0.4708"
    app.kubernetes.io/managed-by: Helm
---
# Source: wiz-sensor/templates/apikeysecret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-test-wiz-sensor-apikey
  namespace: release-helm-namespace
  labels:
    
    helm.sh/chart: "REDACTED"
    image/tag: v1
    app.kubernetes.io/name: wiz-sensor
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/version: "1.0.4708"
    app.kubernetes.io/managed-by: Helm
type: Opaque
stringData:
  clientId: "<required-clientId>"
  clientToken: "<required-clientToken>"
---
# Source: wiz-sensor/templates/imagepullsecret.yaml
apiVersion: v1
kind: Secret
type: kubernetes.io/dockerconfigjson
metadata:
  name: release-test-wiz-sensor-imagepullkey
  labels:
    
    helm.sh/chart: "REDACTED"
    image/tag: v1
    app.kubernetes.io/name: wiz-sensor
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/version: "1.0.4708"
    app.kubernetes.io/managed-by: Helm
  namespace: release-helm-namespace
data:
  .dockerconfigjson: eyJhdXRocyI6IHsid2l6aW8uYXp1cmVjci5pbyI6IHsiYXV0aCI6ICJQSEpsY1hWcGNtVmtMWFZ6WlhKdVlXMWxQam84Y21WeGRXbHlaV1F0Y0dGemMzZHZjbVErIn19fQ==
---
# Source: wiz-sensor/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-test-wiz-sensor
  labels:
    
    helm.sh/chart: "REDACTED"
    image/tag: v1
    app.kubernetes.io/name: wiz-sensor
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/version: "1.0.4708"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch"]

  - apiGroups: ["", "apps", "batch"]
    resources: [
      "namespaces", "nodes", "daemonsets", "replicasets", "deployments",
      "jobs", "cronjobs", "statefulsets", "replicationcontrollers", "serviceaccounts",
    ]
    verbs: ["get", "list", "watch"]
---
# Source: wiz-sensor/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-test-wiz-sensor
  labels:
    
    helm.sh/chart: "REDACTED"
    image/tag: v1
    app.kubernetes.io/name: wiz-sensor
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/version: "1.0.4708"
    app.kubernetes.io/managed-by: Helm
subjects:
- kind: ServiceAccount
  name: release-test-wiz-sensor
  namespace: release-helm-namespace
roleRef:
  kind: ClusterRole
  name: release-test-wiz-sensor
  apiGroup: rbac.authorization.k8s.io
---
# Source: wiz-sensor/templates/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: release-test-wiz-sensor
  labels:
    
    helm.sh/chart: "REDACTED"
    image/tag: v1
    app.kubernetes.io/name: wiz-sensor
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/version: "1.0.4708"
    app.kubernetes.io/managed-by: Helm
  namespace: release-helm-namespace

spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: wiz-sensor
      app.kubernetes.io/instance: release-test

  updateStrategy:
    type: RollingUpdate

  template:
    metadata:
      labels:
        
        helm.sh/chart: "REDACTED"
        image/tag: v1
        app.kubernetes.io/name: wiz-sensor
        app.kubernetes.io/instance: release-test
        app.kubernetes.io/version: "1.0.4708"
        app.kubernetes.io/managed-by: Helm

      annotations:
        cluster-autoscaler.kubernetes.io/enable-ds-eviction: "true"

    spec:
      serviceAccountName: release-test-wiz-sensor
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
              - key: kubernetes.io/arch
                operator: In
                values:
                - arm64
                - amd64

      hostPID: true
      hostIPC: true
      tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - effect: NoSchedule
          key: cloud.google.com/gke-spot
          operator: Equal
          value: "true"
        - effect: NoSchedule
          key: cloud.google.com/gke-preemptible
          operator: Equal
          value: "true"
        - effect: NoSchedule
          key: kubernetes.azure.com/scalesetpriority
          operator: Equal
          value: spot

      restartPolicy: Always

      containers:

      - name: wiz-sensor
        image: wizio.azurecr.io/sensor:v1
        imagePullPolicy: Always

        securityContext:
          capabilities:
            add:
            - SYS_ADMIN # moving between namespaces
            - SYS_CHROOT # moving between namespaces
            - SYS_RESOURCE # eBPF
            - SYS_RAWIO # file hashing
            - DAC_OVERRIDE # file hashing
            - DAC_READ_SEARCH # file hashing
            - NET_ADMIN # network events
            - NET_RAW # network events
            - IPC_LOCK # eBPF
            - FOWNER # file hashing
            - SYS_PTRACE # eBPF
            - SYSLOG # kernel symbol resolve
            - KILL # response
          privileged: false
          runAsNonRoot: true
          runAsUser: 2202
          runAsGroup: 2202
          readOnlyRootFilesystem: true
          appArmorProfile:
            type: Unconfined
          seccompProfile:
            type: Unconfined
          seLinuxOptions:
            user: "system_u"
            role: "system_r"
            level: "s0"
            type: "spc_t"

        env:
        - name: MIN_SENSOR_COMPAT_BUILD_VER
          value: "4142"
        - name: HELM_CHART_COMPAT_VER
          value: "1"
        - name: WIZ_TMP_STORE
          value: "/wiz-sensor-store/"
        - name: WIZ_HOST_STORE
          value: "/wiz-host-cache/"
        - name: WIZ_RAMFS_STORE
          value: "/tmp/"
        - name: LOG_FILE
          value: "/wiz-sensor-store/sensor.log"
        - name: MY_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_POD_UID
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: MY_APIKEY_SECRET_NAME
          value: release-test-wiz-sensor-apikey
        - name: AWS_EC2_METADATA_DISABLED
          value: "true"
        - name: CRI_SOCKET_CUSTOM_PATH
          value: 
        - name: HTTP_PROXY_URL
          value: 
        - name: HTTP_PROXY_USERNAME
          value: 
        - name: HTTP_PROXY_PASSWORD
          value: 
        - name: HTTP_PROXY_CERT
          value: 
        - name: BACKEND_ENV
          value: prod
        - name: SENSOR_CLUSTER_NAME
          value: 
        - name: RUST_LOG
          value: info
        - name: STDOUT_LOG
          value: error
        - name: POD_MEM_LIMITS
          valueFrom:
            resourceFieldRef:
              containerName: wiz-sensor
              resource: limits.memory
              divisor: "1Mi"
        - name: POD_CPU_LIMITS
          valueFrom:
            resourceFieldRef:
              containerName: wiz-sensor
              resource: limits.cpu
              divisor: "1m"

        volumeMounts:
        - name: sensor-host-cache
          mountPath: /wiz-host-cache/
        - name: sensor-store
          mountPath: /wiz-sensor-store/
        - name: tmp-store
          mountPath: /tmp/
        - name: api-client-secret
          mountPath: /api-client/
        - name: api-endpoint-name-secret
          mountPath: /api-endpoint-name/
        resources:
          limits:
            cpu: 300m
            memory: 300Mi
          requests:
            cpu: 10m
            memory: 50Mi

      terminationGracePeriodSeconds: 90
      imagePullSecrets:
        - name: release-test-wiz-sensor-imagepullkey
      volumes:
      - name: sensor-host-cache
        hostPath:
          path: /var/lib/wiz/
          type: DirectoryOrCreate
      - name: api-client-secret
        secret:
          secretName: release-test-wiz-sensor-apikey
          items:
            - key: clientId
              path: clientId
            - key: clientToken
              path: clientToken
      - name: api-endpoint-name-secret
        secret:
          secretName: release-test-wiz-sensor-apikey
          optional: true
          items:
            - key: clientEndpoint
              path: clientEndpoint
      - name: sensor-store
        emptyDir:
          sizeLimit: "1Gi"
      - name: tmp-store
        emptyDir:
          sizeLimit: "100Mi"
          medium: "Memory"