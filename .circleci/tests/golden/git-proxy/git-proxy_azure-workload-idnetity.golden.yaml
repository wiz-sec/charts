---
# Source: git-proxy/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: wiz-git-proxy-sa
  labels:
    helm.sh/chart: "GOLDEN_STATIC_VALUE"
    app.kubernetes.io/name: git-proxy
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
    azure.workload.identity/use: "true"
  annotations: 
    azure.workload.identity/client-id: b5039e79-efab-4452-af5c-f4a44dd4ebe6
    azure.workload.identity/tenant-id: pasten
---
# Source: git-proxy/templates/secret.yaml
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: azure-creds
  labels:
    helm.sh/chart: "GOLDEN_STATIC_VALUE"
    app.kubernetes.io/name: git-proxy
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
data:
  azure.json: "eyJlbnZpcm9ubWVudCI6IkFaVVJFUFVCTElDIiwic3Vic2NyaXB0aW9uSWQiOiJwYXN0ZW4iLCJ0ZW5hbnRJZCI6InBhc3RlbiIsInVzZUZlZGVyYXRlZFRva2VuIjp0cnVlfQ=="
  # external secrets need each key separately so we reference the secret via env vars
  environment: "QVpVUkVQVUJMSUM="
  subscriptionId: "cGFzdGVu"
  tenantId: "cGFzdGVu"
---
# Source: git-proxy/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-test-git-proxy
  labels:
    helm.sh/chart: "GOLDEN_STATIC_VALUE"
    app.kubernetes.io/name: git-proxy
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
    - port: 3000
      targetPort: grpc
      protocol: TCP
      name: grpc
  selector:
    app.kubernetes.io/name: git-proxy
    app.kubernetes.io/instance: release-test
---
# Source: git-proxy/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: git-proxy
  labels:
    helm.sh/chart: "GOLDEN_STATIC_VALUE"
    app.kubernetes.io/name: git-proxy
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
    - port: 3000
      targetPort: grpc
      protocol: TCP
      name: grpc
  selector:
    app.kubernetes.io/name: git-proxy
    app.kubernetes.io/instance: release-test
---
# Source: git-proxy/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-test-git-proxy
  labels:
    helm.sh/chart: "GOLDEN_STATIC_VALUE"
    app.kubernetes.io/name: git-proxy
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: git-proxy
      app.kubernetes.io/instance: release-test
  template:
    metadata:
      annotations:
        test: testington
      labels:
        app.kubernetes.io/name: git-proxy
        app.kubernetes.io/instance: release-test
        azure.workload.identity/use: "true"
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: wiz.io/node-group-type
                operator: In
                values:
                - control-plane
      serviceAccountName: wiz-git-proxy-sa
      securityContext:
        fsGroup: 1000
        supplementalGroups:
          - 1000
      containers:
        - name: git-proxy
          securityContext:
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            privileged: false
            allowPrivilegeEscalation: false
          
          image: "wizpublic/wiz-git-proxy-blob:2c74eaf-multiarch"
          imagePullPolicy: Always

          env:
          - name: http_proxy
            valueFrom:
              secretKeyRef: 
                name: "wiz-http-proxy-configuration"
                key: "httpProxy"
                optional: true
          - name: HTTP_PROXY
            valueFrom:
              secretKeyRef: 
                name: "wiz-http-proxy-configuration"
                key: "httpProxy"
                optional: true
          - name: https_proxy
            valueFrom:
              secretKeyRef: 
                name: "wiz-http-proxy-configuration"
                key: "httpsProxy"
                optional: true
          - name: HTTPS_PROXY
            valueFrom:
              secretKeyRef: 
                name: "wiz-http-proxy-configuration"
                key: "httpsProxy"
                optional: true
          - name: no_proxy
            valueFrom:
              secretKeyRef: 
                name: "wiz-http-proxy-configuration"
                key: "noProxyAddress"
                optional: true
          - name: NO_PROXY
            valueFrom:
              secretKeyRef: 
                name: "wiz-http-proxy-configuration"
                key: "noProxyAddress"
                optional: true
          - name: SSL_CERT_DIR
            value: "/usr/local/share/ca-certificates/:/certificates/"
          args: [
            "--resourceGroup", "test-rg",
            "--storageAccount", "test-sa",
            "--containerName", "state-container-name",
            "--port", "8080",
          ]
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: grpc
              containerPort: 3000
              protocol: TCP
          resources:
            {}
          volumeMounts:
            - mountPath: /tmp
              name: tmp-dir
            - mountPath: /etc/kubernetes/
              name: azure-creds
              readOnly: true
            - mountPath: /usr/local/share/ca-certificates/
              name: ca-certificate
              readOnly: true
      volumes:
        - name: tmp-dir
          emptyDir: {}
        - name: ca-certificate
          secret:
            defaultMode: 420
            secretName: "wiz-http-proxy-configuration"
            items:
              - key: caCertificate
                path: root.crt
            optional: true
        - name: azure-creds
          secret:
            secretName: azure-creds
