---
# Source: wiz-kubernetes-integration/charts/wiz-admission-controller/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-test-wiz-admission-controller
  namespace: "release-helm-namespace"
  labels:
    helm.sh/chart: "GOLDEN_STATIC_VALUE"
    app.kubernetes.io/chartName: wiz-admission-controller
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/version: "2.7"
    app.kubernetes.io/managed-by: Helm
---
# Source: wiz-kubernetes-integration/charts/wiz-admission-controller/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-test-wiz-admission-controller-manager
  namespace: "release-helm-namespace"
  labels:
    helm.sh/chart: "GOLDEN_STATIC_VALUE"
    app.kubernetes.io/chartName: wiz-admission-controller
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/version: "2.7"
    app.kubernetes.io/managed-by: Helm
---
# Source: wiz-kubernetes-integration/charts/wiz-kubernetes-connector/charts/wiz-broker/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: wiz-broker
  namespace: "release-helm-namespace"
  labels:
    helm.sh/chart: "GOLDEN_STATIC_VALUE"
    app.kubernetes.io/name: wiz-broker
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/version: "2.5"
    app.kubernetes.io/managed-by: Helm
---
# Source: wiz-kubernetes-integration/charts/wiz-sensor/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-test-wiz-sensor
  namespace: release-helm-namespace
  labels:
    
    helm.sh/chart: "GOLDEN_STATIC_VALUE"
    image/tag: v1
    app.kubernetes.io/name: wiz-sensor
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/version: "1.0.5145"
    app.kubernetes.io/managed-by: Helm
---
# Source: wiz-kubernetes-integration/charts/wiz-sensor/templates/imagepullsecret.yaml
apiVersion: v1
kind: Secret
type: kubernetes.io/dockerconfigjson
metadata:
  name: sensor-image-pull
  labels:
    
    helm.sh/chart: "GOLDEN_STATIC_VALUE"
    image/tag: v1
    app.kubernetes.io/name: wiz-sensor
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/version: "1.0.5145"
    app.kubernetes.io/managed-by: Helm
  namespace: release-helm-namespace
data:
  .dockerconfigjson: eyJhdXRocyI6IHsid2l6aW8uYXp1cmVjci5pbyI6IHsiYXV0aCI6ICJjSFZzYkhWelpYSTZjSFZzYkhCaGMzTjNiM0prIn19fQ==
---
# Source: wiz-kubernetes-integration/charts/wiz-sensor/templates/diskscanconfig.yaml
apiVersion: v1
kind: ConfigMap

metadata:
  name: release-test-disk-scan-config
  labels:
    
    helm.sh/chart: "GOLDEN_STATIC_VALUE"
    image/tag: v1
    app.kubernetes.io/name: wiz-sensor
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/version: "1.0.5145"
    app.kubernetes.io/managed-by: Helm
  namespace: release-helm-namespace

data:
  config: |
    null
---
# Source: wiz-kubernetes-integration/charts/wiz-admission-controller/templates/serviceaccount.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-test-wiz-admission-controller-namespace-reader
  namespace: "release-helm-namespace"
  labels:
    helm.sh/chart: "GOLDEN_STATIC_VALUE"
    app.kubernetes.io/chartName: wiz-admission-controller
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/version: "2.7"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["get", "list"]
---
# Source: wiz-kubernetes-integration/charts/wiz-admission-controller/templates/serviceaccount.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-test-wiz-admission-controller-manager-event-creator
  namespace: "release-helm-namespace"
  labels:
    helm.sh/chart: "GOLDEN_STATIC_VALUE"
    app.kubernetes.io/chartName: wiz-admission-controller
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/version: "2.7"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create"]
---
# Source: wiz-kubernetes-integration/charts/wiz-kubernetes-connector/templates/service-account-cluster-reader.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: wiz-cluster-reader
  labels:
    helm.sh/chart: "GOLDEN_STATIC_VALUE"
    app.kubernetes.io/name: wiz-kubernetes-connector
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/version: "2.5"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: ["*"]
    resources: ["*"]
    verbs: ["get", "list", "watch"]
---
# Source: wiz-kubernetes-integration/charts/wiz-sensor/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-test-wiz-sensor
  labels:
    
    helm.sh/chart: "GOLDEN_STATIC_VALUE"
    image/tag: v1
    app.kubernetes.io/name: wiz-sensor
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/version: "1.0.5145"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch"]

  - apiGroups: ["", "apps", "batch"]
    resources: [
      "namespaces", "nodes", "daemonsets", "replicasets", "deployments",
      "jobs", "cronjobs", "statefulsets", "replicationcontrollers", "serviceaccounts",
    ]
    verbs: ["get", "list", "watch"]
---
# Source: wiz-kubernetes-integration/charts/wiz-admission-controller/templates/serviceaccount.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-test-wiz-admission-controller-namespace
  namespace: "release-helm-namespace"
  labels:
    helm.sh/chart: "GOLDEN_STATIC_VALUE"
    app.kubernetes.io/chartName: wiz-admission-controller
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/version: "2.7"
    app.kubernetes.io/managed-by: Helm
subjects:
- kind: ServiceAccount
  name: release-test-wiz-admission-controller
  namespace: "release-helm-namespace"
roleRef:
  kind: ClusterRole
  name: release-test-wiz-admission-controller-namespace-reader
  apiGroup: rbac.authorization.k8s.io
---
# Source: wiz-kubernetes-integration/charts/wiz-admission-controller/templates/serviceaccount.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-test-wiz-admission-controller-manager-event-creator
  namespace: "release-helm-namespace"
  labels:
    helm.sh/chart: "GOLDEN_STATIC_VALUE"
    app.kubernetes.io/chartName: wiz-admission-controller
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/version: "2.7"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: ClusterRole
  name: release-test-wiz-admission-controller-manager-event-creator
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: release-test-wiz-admission-controller-manager
    namespace: "release-helm-namespace"
---
# Source: wiz-kubernetes-integration/charts/wiz-kubernetes-connector/templates/service-account-cluster-reader.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: wiz-cluster-reader
  labels:
    helm.sh/chart: "GOLDEN_STATIC_VALUE"
    app.kubernetes.io/name: wiz-kubernetes-connector
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/version: "2.5"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name:  wiz-cluster-reader
subjects:
- kind: ServiceAccount
  name: wiz-cluster-reader
  namespace: "release-helm-namespace"
---
# Source: wiz-kubernetes-integration/charts/wiz-sensor/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-test-wiz-sensor
  labels:
    
    helm.sh/chart: "GOLDEN_STATIC_VALUE"
    image/tag: v1
    app.kubernetes.io/name: wiz-sensor
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/version: "1.0.5145"
    app.kubernetes.io/managed-by: Helm
subjects:
- kind: ServiceAccount
  name: release-test-wiz-sensor
  namespace: release-helm-namespace
roleRef:
  kind: ClusterRole
  name: release-test-wiz-sensor
  apiGroup: rbac.authorization.k8s.io
---
# Source: wiz-kubernetes-integration/charts/wiz-admission-controller/templates/serviceaccount.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-test-wiz-admission-controller-manager-pods-and-deployments-manager
  namespace: "release-helm-namespace"
  labels:
    helm.sh/chart: "GOLDEN_STATIC_VALUE"
    app.kubernetes.io/chartName: wiz-admission-controller
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/version: "2.7"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: ["apps"]
    resources: ["deployments"]
    resourceNames: ["release-test-wiz-admission-controller","release-test-wiz-admission-controller-audit-log-collector"]
    verbs: ["get", "patch"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list"]
---
# Source: wiz-kubernetes-integration/charts/wiz-admission-controller/templates/serviceaccount.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-test-wiz-admission-controller-manager-pods-and-deployments
  namespace: "release-helm-namespace"
  labels:
    helm.sh/chart: "GOLDEN_STATIC_VALUE"
    app.kubernetes.io/chartName: wiz-admission-controller
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/version: "2.7"
    app.kubernetes.io/managed-by: Helm
subjects:
  - kind: ServiceAccount
    name: release-test-wiz-admission-controller-manager
    namespace: "release-helm-namespace"
roleRef:
  kind: Role
  name: release-test-wiz-admission-controller-manager-pods-and-deployments-manager
  apiGroup: rbac.authorization.k8s.io
---
# Source: wiz-kubernetes-integration/charts/wiz-admission-controller/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-test-wiz-admission-controller
  namespace: "release-helm-namespace"
  labels:
    helm.sh/chart: "GOLDEN_STATIC_VALUE"
    app.kubernetes.io/chartName: wiz-admission-controller
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/version: "2.7"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: wiz-admission-controller
spec:
  type: ClusterIP
  ports:
    - port: 443
      targetPort: 10250
      protocol: TCP
  selector:
    app.kubernetes.io/chartName: wiz-admission-controller
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/name: wiz-admission-controller
---
# Source: wiz-kubernetes-integration/charts/wiz-admission-controller/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-test-wiz-admission-controller-audit-log-collector
  namespace: "release-helm-namespace"
  labels:
    helm.sh/chart: "GOLDEN_STATIC_VALUE"
    app.kubernetes.io/chartName: wiz-admission-controller
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/version: "2.7"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: release-test-wiz-admission-controller-audit-log-collector
spec:
  type: ClusterIP
  ports:
    - port: 443
      targetPort: 10250
      protocol: TCP
  selector:
    app.kubernetes.io/chartName: wiz-admission-controller
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/name: release-test-wiz-admission-controller-audit-log-collector
---
# Source: wiz-kubernetes-integration/charts/wiz-sensor/templates/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: release-test-wiz-sensor
  labels:
    
    helm.sh/chart: "GOLDEN_STATIC_VALUE"
    image/tag: v1
    app.kubernetes.io/name: wiz-sensor
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/version: "1.0.5145"
    app.kubernetes.io/managed-by: Helm
  namespace: release-helm-namespace

spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: wiz-sensor
      app.kubernetes.io/instance: release-test

  updateStrategy:
    type: RollingUpdate

  template:
    metadata:
      labels:
        
        helm.sh/chart: "GOLDEN_STATIC_VALUE"
        image/tag: v1
        app.kubernetes.io/name: wiz-sensor
        app.kubernetes.io/instance: release-test
        app.kubernetes.io/version: "1.0.5145"
        app.kubernetes.io/managed-by: Helm

      annotations:
        container.apparmor.security.beta.kubernetes.io/wiz-sensor: unconfined
        container.apparmor.security.beta.kubernetes.io/wiz-disk-scanner: unconfined
        cluster-autoscaler.kubernetes.io/enable-ds-eviction: "true"

    spec:
      serviceAccountName: release-test-wiz-sensor
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
              - key: kubernetes.io/arch
                operator: In
                values:
                - arm64
                - amd64

      hostPID: true
      hostIPC: true
      tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - effect: NoSchedule
          key: cloud.google.com/gke-spot
          operator: Equal
          value: "true"
        - effect: NoSchedule
          key: cloud.google.com/gke-preemptible
          operator: Equal
          value: "true"
        - effect: NoSchedule
          key: kubernetes.azure.com/scalesetpriority
          operator: Equal
          value: spot

      restartPolicy: Always

      containers:
      - name: wiz-disk-scanner
        image: wizio.azurecr.io/wiz-app/onprem-scanner:v1
        imagePullPolicy: Always

        securityContext:
          capabilities:
            add:
            - SYS_ADMIN # Mount operations.
            - DAC_OVERRIDE # Access filesystem with overlayFS.
            - DAC_READ_SEARCH # Access filesystem with overlayFS.
            - FOWNER # Access filesystem with overlayFS.
            - CHOWN # Access filesystem with overlayFS.
            - SETPCAP # Drop capabilities when not needed.
          privileged: false
          runAsNonRoot: true
          runAsUser: 2202
          runAsGroup: 2202
          readOnlyRootFilesystem: true
          seccompProfile:
            type: Unconfined
          seLinuxOptions:
            user: "system_u"
            role: "system_r"
            level: "s0"
            type: "spc_t"

        env:
        - name: POD_MEM_LIMITS
          valueFrom:
            resourceFieldRef:
              containerName: wiz-disk-scanner
              resource: limits.memory
              divisor: "1Mi"
        - name: POD_CPU_LIMITS
          valueFrom:
            resourceFieldRef:
              containerName: wiz-disk-scanner
              resource: limits.cpu
              divisor: "1m"
        - name: MY_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_POD_UID
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: WIZ_BACKEND_ENV
          valueFrom:
            secretKeyRef:
              name: wiz-api-token
              key: clientEndpoint
              optional: true
        - name: WIZ_ONPREM_SCANNER_CONFIG
          valueFrom:
            configMapKeyRef:
              name: release-test-disk-scan-config
              key: config

        volumeMounts:
        - name: host-mount
          mountPath: /host
          readOnly: true
        - name: api-client-secret
          mountPath: /api-client/
        - name: api-endpoint-name-secret
          mountPath: /api-endpoint-name/
        - name: sensor-scanner-shared-vol
          mountPath: /wiz-sensor-share/
        - name: sensor-scanner-tmp-store
          mountPath: /tmp/
        resources:
          limits:
            cpu: 100m
            memory: 700Mi
          requests:
            cpu: 10m
            memory: 100Mi

      - name: wiz-sensor
        image: wizio.azurecr.io/sensor:v1
        imagePullPolicy: Always

        securityContext:
          capabilities:
            add:
            - SYS_ADMIN # moving between namespaces
            - SYS_CHROOT # moving between namespaces
            - SYS_RESOURCE # eBPF
            - SYS_RAWIO # file hashing
            - DAC_OVERRIDE # file hashing
            - DAC_READ_SEARCH # file hashing
            - NET_ADMIN # network events
            - NET_RAW # network events
            - IPC_LOCK # eBPF
            - FOWNER # file hashing
            - SYS_PTRACE # eBPF
            - SYSLOG # kernel symbol resolve
            - KILL # response
          privileged: false
          runAsNonRoot: true
          runAsUser: 2202
          runAsGroup: 2202
          readOnlyRootFilesystem: true
          seccompProfile:
            type: Unconfined
          seLinuxOptions:
            user: "system_u"
            role: "system_r"
            level: "s0"
            type: "spc_t"

        env:
        - name: MIN_SENSOR_COMPAT_BUILD_VER
          value: "4142"
        - name: HELM_CHART_COMPAT_VER
          value: "1"
        - name: WIZ_TMP_STORE
          value: "/wiz-sensor-store/"
        - name: WIZ_HOST_STORE
          value: "/wiz-host-cache/"
        - name: WIZ_RAMFS_STORE
          value: "/tmp/"
        - name: LOG_FILE
          value: "/wiz-sensor-store/sensor.log"
        - name: MY_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_POD_UID
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: MY_APIKEY_SECRET_NAME
          value: wiz-api-token
        - name: AWS_EC2_METADATA_DISABLED
          value: "true"
        - name: CRI_SOCKET_CUSTOM_PATH
          value: 
        - name: HTTP_PROXY_URL
          value: 
        - name: HTTP_PROXY_USERNAME
          value: 
        - name: HTTP_PROXY_PASSWORD
          value: 
        - name: HTTP_PROXY_CERT
          value: 
        - name: DISK_SCAN_SHARED_VOL
          value: "/wiz-sensor-share/"
        - name: BACKEND_ENV
          value: prod
        - name: SENSOR_CLUSTER_NAME
          value: OnPrem-Cluster
        - name: RUST_LOG
          value: info
        - name: STDOUT_LOG
          value: error
        - name: POD_MEM_LIMITS
          valueFrom:
            resourceFieldRef:
              containerName: wiz-sensor
              resource: limits.memory
              divisor: "1Mi"
        - name: POD_CPU_LIMITS
          valueFrom:
            resourceFieldRef:
              containerName: wiz-sensor
              resource: limits.cpu
              divisor: "1m"
        - name: SUBSCRIPTION_EXTERNAL_ID
          value: "OnPrem-Sub"
        - name: SUBSCRIPTION_TAGS
          value: "{\"environment\":\"OnPrem\",\"stag\":\"onprem-stag\"}"
        - name: CLUSTER_TAGS
          value: "{\"ctag\":\"onprem-ctag\"}"

        volumeMounts:
        - name: sensor-host-cache
          mountPath: /wiz-host-cache/
        - name: sensor-store
          mountPath: /wiz-sensor-store/
        - name: tmp-store
          mountPath: /tmp/
        - name: api-client-secret
          mountPath: /api-client/
        - name: api-endpoint-name-secret
          mountPath: /api-endpoint-name/
        - name: sensor-scanner-shared-vol
          mountPath: /wiz-sensor-share/
        resources:
          limits:
            cpu: 300m
            memory: 300Mi
          requests:
            cpu: 10m
            memory: 50Mi

      terminationGracePeriodSeconds: 90
      imagePullSecrets:
        - name: sensor-image-pull
      volumes:
      - name: sensor-host-cache
        hostPath:
          path: /var/lib/wiz/
          type: DirectoryOrCreate
      - name: api-client-secret
        secret:
          secretName: wiz-api-token
          items:
            - key: clientId
              path: clientId
            - key: clientToken
              path: clientToken
      - name: api-endpoint-name-secret
        secret:
          secretName: wiz-api-token
          optional: true
          items:
            - key: clientEndpoint
              path: clientEndpoint
      - name: sensor-store
        emptyDir:
          sizeLimit: "1Gi"
      - name: tmp-store
        emptyDir:
          sizeLimit: "100Mi"
          medium: "Memory"
      - name: host-mount
        hostPath:
          path: /
      - name: sensor-scanner-shared-vol
        emptyDir:
          sizeLimit: "100Mi"
          medium: "Memory"
      - name: sensor-scanner-tmp-store
        emptyDir:
          sizeLimit: "5Gi"
---
# Source: wiz-kubernetes-integration/charts/wiz-admission-controller/templates/deploymentauditlogs.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-test-wiz-admission-controller-audit-log-collector
  namespace: "release-helm-namespace"
  labels:
    helm.sh/chart: "GOLDEN_STATIC_VALUE"
    app.kubernetes.io/chartName: wiz-admission-controller
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/version: "2.7"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: release-test-wiz-admission-controller-audit-log-collector
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/chartName: wiz-admission-controller
      app.kubernetes.io/instance: release-test
      app.kubernetes.io/name: release-test-wiz-admission-controller-audit-log-collector
  template:
    metadata:
      annotations:
        rollme.proxyHash: 08766d42378ee5793f5f58973d800d4b064e466ae67684e16b1a56ab1c5dedfc
        rollme.wizApiTokenHash: ac5e15dd7eba9b6b90ebacfa093484570f1c58ef394b9ce8341a207d97852251
        rollme.webhookCert: "GOLDEN_STATIC_VALUE"
      labels:
        
        helm.sh/chart: "GOLDEN_STATIC_VALUE"
        app.kubernetes.io/chartName: wiz-admission-controller
        app.kubernetes.io/instance: release-test
        app.kubernetes.io/version: "2.7"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: release-test-wiz-admission-controller-audit-log-collector
    spec:
      serviceAccountName: release-test-wiz-admission-controller
      securityContext:
        {}
      terminationGracePeriodSeconds: 60
      containers:
        - name: wiz-admission-controller
          securityContext:
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          image: wiziopublic.azurecr.io/wiz-app/wiz-admission-controller:2.7
          imagePullPolicy: Always
          ports:
          - containerPort: 10250
          readinessProbe:
            httpGet:
              path: /ready
              port: 8000
              scheme: HTTPS
            failureThreshold: 1
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 30
          livenessProbe:
            httpGet:
              path: /live
              port: 8000
              scheme: HTTPS
            failureThreshold: 3
            initialDelaySeconds: 5
            timeoutSeconds: 30
          startupProbe:
            httpGet:
              path: /ready
              port: 8000
              scheme: HTTPS
            failureThreshold: 30
            initialDelaySeconds: 5
            timeoutSeconds: 300
          command:
          - "/usr/bin/wiz-admission-controller"
          # Cluster identification flags
          - --subscription-external-id
          - "OnPrem-Sub"
          - --cluster-tags
          - "{\"ctag\":\"onprem-ctag\"}"
          - --subscription-tags
          - "{\"environment\":\"OnPrem\",\"stag\":\"onprem-stag\"}"
          # Server flags
          - "--port=10250"
          - "--tls-private-key-file=/var/server-certs/tls.key"
          - "--tls-cert-file=/var/server-certs/tls.crt"
          - "--readiness-port=8000"
          # Kubernetes API server flags
          - "--namespace-cache-ttl=10m"
          # Webhook flags
          - "--error-enforcement-method=AUDIT"
          - "--policy-enforcement-method=AUDIT"
          # K8S audit logs webhook flags
          - "--kubernetes-audit-logs-enabled=true"
          # Disable other webhooks
          - "--misconfiguration-enabled=false"
          - "--image-integrity-enabled=false"
          env:
          - name: WIZ_CLIENT_ID
            valueFrom:
              secretKeyRef:
                name: wiz-api-token
                key: clientId
                optional: false
          - name: WIZ_CLIENT_TOKEN
            valueFrom:
              secretKeyRef:
                name: wiz-api-token
                key: clientToken
                optional: false
          - name: WIZ_ENV
            value: 
          - name: LOG_LEVEL
            value: info
          - name: WIZ_RUNTIME_METADATA_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: WIZ_RUNTIME_METADATA_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: K8S_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: WIZ_TERMINATION_GRACE_PERIOD
            value: "60s"
          - name: WIZ_CHART_VERSION
            value: "GOLDEN_STATIC_VALUE"
          ## Enable debug webhook that only logs the request
          resources:
            {}
          volumeMounts:
          - mountPath: /var/server-certs
            name: server-certs
            readOnly: true
      volumes:
        - name: server-certs
          secret:
            defaultMode: 444
            secretName: release-test-wiz-admission-controller-cert
---
# Source: wiz-kubernetes-integration/charts/wiz-admission-controller/templates/deploymentenforcement.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-test-wiz-admission-controller
  namespace: "release-helm-namespace"
  labels:
    helm.sh/chart: "GOLDEN_STATIC_VALUE"
    app.kubernetes.io/chartName: wiz-admission-controller
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/version: "2.7"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: wiz-admission-controller
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/chartName: wiz-admission-controller
      app.kubernetes.io/instance: release-test
      app.kubernetes.io/name: wiz-admission-controller
  template:
    metadata:
      annotations:
        rollme.proxyHash: 08766d42378ee5793f5f58973d800d4b064e466ae67684e16b1a56ab1c5dedfc
        rollme.wizApiTokenHash: ac5e15dd7eba9b6b90ebacfa093484570f1c58ef394b9ce8341a207d97852251
        rollme.webhookCert: "GOLDEN_STATIC_VALUE"
      labels:
        
        helm.sh/chart: "GOLDEN_STATIC_VALUE"
        app.kubernetes.io/chartName: wiz-admission-controller
        app.kubernetes.io/instance: release-test
        app.kubernetes.io/version: "2.7"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: wiz-admission-controller
    spec:
      serviceAccountName: release-test-wiz-admission-controller
      securityContext:
        {}
      terminationGracePeriodSeconds: 60
      containers:
        - name: wiz-admission-controller
          securityContext:
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          image: wiziopublic.azurecr.io/wiz-app/wiz-admission-controller:2.7
          imagePullPolicy: Always
          ports:
          - containerPort: 10250
          readinessProbe:
            httpGet:
              path: /ready
              port: 8000
              scheme: HTTPS
            failureThreshold: 1
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 30
          livenessProbe:
            httpGet:
              path: /live
              port: 8000
              scheme: HTTPS
            failureThreshold: 3
            initialDelaySeconds: 5
            timeoutSeconds: 30
          startupProbe:
            httpGet:
              path: /ready
              port: 8000
              scheme: HTTPS
            failureThreshold: 30
            initialDelaySeconds: 5
            timeoutSeconds: 300

          command:
          - "/usr/bin/wiz-admission-controller"
          # Cluster identification flags
          - --subscription-external-id
          - "OnPrem-Sub"
          - --cluster-tags
          - "{\"ctag\":\"onprem-ctag\"}"
          - --subscription-tags
          - "{\"environment\":\"OnPrem\",\"stag\":\"onprem-stag\"}"
          # Server flags
          - "--port=10250"
          - "--tls-private-key-file=/var/server-certs/tls.key"
          - "--tls-cert-file=/var/server-certs/tls.crt"
          - "--readiness-port=8000"
          # Kubernetes API server flags
          - "--namespace-cache-ttl=10m"
          # Webhook flags # check opaWebhook for backward compatibility
          - "--error-enforcement-method=AUDIT"
          # OPA webhook flags
          - "--misconfiguration-enabled=true"
          
          # Image integrity webhook flags# Disable K8S audit logs webhook
          - "--kubernetes-audit-logs-enabled=false"
          env:
          - name: WIZ_CLIENT_ID
            valueFrom:
              secretKeyRef:
                name: wiz-api-token
                key: clientId
                optional: false
          - name: WIZ_CLIENT_TOKEN
            valueFrom:
              secretKeyRef:
                name: wiz-api-token
                key: clientToken
                optional: false
          - name: WIZ_ENV
            value: 
          - name: LOG_LEVEL
            value: info
          - name: WIZ_RUNTIME_METADATA_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: WIZ_RUNTIME_METADATA_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: K8S_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: WIZ_TERMINATION_GRACE_PERIOD
            value: "60s"
          - name: WIZ_CHART_VERSION
            value: "GOLDEN_STATIC_VALUE"
          - name: WIZ_IMAGE_INTEGRITY_PATCH_IMAGE_DIGEST_ANNOTATION
            value: "true"
           # For running pod with read only file system we write all the cache files to /var/cache volume mount, used by image integrity hook
          - name: TUF_ROOT
            value: "/var/cache/.sigstore"
          - name: AWS_ECR_CACHE_DIR
            value: "/var/cache/.ecr"
           ## Image registry client flags
          - name: WIZ_REGISTRY_IGNORE_SECRET_MISSING_ERROR
            value: "false"
          - name: WIZ_REGISTRY_IMAGE_PULL_SECRET_RELOAD_INTERVAL
            value: "5m"
          ## Enable debug webhook that only logs the request
          resources:
            {}
          volumeMounts:
          - mountPath: /var/cache
            name: cache
          - mountPath: /var/server-certs
            name: server-certs
            readOnly: true
      volumes:
        - name: cache
          emptyDir: {}
        - name: server-certs
          secret:
            defaultMode: 444
            secretName: release-test-wiz-admission-controller-cert
---
# Source: wiz-kubernetes-integration/charts/wiz-kubernetes-connector/charts/wiz-broker/templates/wiz-broker-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-test-agent
  namespace: "release-helm-namespace"
  labels:
    helm.sh/chart: "GOLDEN_STATIC_VALUE"
    app.kubernetes.io/name: wiz-broker
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/version: "2.5"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: wiz-broker
      app.kubernetes.io/instance: release-test
  template:
    metadata:
      annotations:
        rollme: "GOLDEN_STATIC_VALUE"
      labels:
        helm.sh/chart: "GOLDEN_STATIC_VALUE"
        app.kubernetes.io/name: wiz-broker
        app.kubernetes.io/instance: release-test
        app.kubernetes.io/version: "2.5"
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: wiz-broker
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
      volumes:
        - name: connector-data
          secret:
            secretName: release-test-connector
            items:
              - key: connectorData
                path: data
      containers:
        - name: wiz-broker
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 1000
          image: wiziopublic.azurecr.io/wiz-app/wiz-broker:2.5
          imagePullPolicy: Always
          volumeMounts:
          - name: connector-data
            mountPath: /etc/connectorData
            readOnly: true
          args: [
            /etc/connectorData/data
          ]
          env:
          - name: LOG_LEVEL
            value: info
          - name: WIZ_ENV
            value: 
          - name: WIZ_CLIENT_ID
            valueFrom:
              secretKeyRef:
                name: wiz-api-token
                key: clientId
          - name: WIZ_CLIENT_TOKEN
            valueFrom:
              secretKeyRef:
                name: wiz-api-token
                key: clientToken
          - name: TARGET_IP
            value: kubernetes.default.svc.cluster.local
          - name: TARGET_PORT
            value: "443"
          resources:
            null
---
# Source: wiz-kubernetes-integration/charts/wiz-admission-controller/templates/cronjobmanager.yaml
apiVersion: batch/v1
kind: CronJob
metadata:
  name: release-test-wiz-admission-controller-manager
  namespace: "release-helm-namespace"
  labels:
    helm.sh/chart: "GOLDEN_STATIC_VALUE"
    app.kubernetes.io/chartName: wiz-admission-controller
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/version: "2.7"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: release-test-wiz-admission-controller-manager
spec:
  schedule: "0 * * * *"
  concurrencyPolicy: Forbid  # Ensures only one job instance runs at a time
  jobTemplate:
    spec:
      activeDeadlineSeconds: 300
      ttlSecondsAfterFinished: 300
      template:
        metadata:
          annotations:
            rollme.proxyHash: 08766d42378ee5793f5f58973d800d4b064e466ae67684e16b1a56ab1c5dedfc
            rollme.wizApiTokenHash: ac5e15dd7eba9b6b90ebacfa093484570f1c58ef394b9ce8341a207d97852251
          labels:
            helm.sh/chart: "GOLDEN_STATIC_VALUE"
            app.kubernetes.io/chartName: wiz-admission-controller
            app.kubernetes.io/instance: release-test
            app.kubernetes.io/version: "2.7"
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: release-test-wiz-admission-controller-manager
        spec:
          restartPolicy: Never
          serviceAccountName: release-test-wiz-admission-controller-manager
          securityContext:
            {}
          terminationGracePeriodSeconds: 60
          containers:
            - name: wiz-admission-controller-manager
              securityContext:
                capabilities:
                  drop:
                  - ALL
                readOnlyRootFilesystem: true
                runAsNonRoot: true
                runAsUser: 1000
              image: "wiziopublic.azurecr.io/wiz-app/wiz-admission-controller:2.7"
              imagePullPolicy: Always
              command:
              - "/usr/bin/wiz-admission-controller"
              - "manager"
              # Cluster identification flags
              - --subscription-external-id
              - "OnPrem-Sub"
              - --cluster-tags
              - "{\"ctag\":\"onprem-ctag\"}"
              - --subscription-tags
              - "{\"environment\":\"OnPrem\",\"stag\":\"onprem-stag\"}"
              - "--update-deployments=release-test-wiz-admission-controller,release-test-wiz-admission-controller-audit-log-collector"
              # Auto update flags
              - "--auto-update-enabled=true"
              - "--release-namespace=release-helm-namespace"
              env:
              - name: WIZ_CLIENT_ID
                valueFrom:
                  secretKeyRef:
                    name: wiz-api-token
                    key: clientId
                    optional: false
              - name: WIZ_CLIENT_TOKEN
                valueFrom:
                  secretKeyRef:
                    name: wiz-api-token
                    key: clientToken
                    optional: false
              - name: WIZ_ENV
                value: 
              - name: LOG_LEVEL
                value: info
              - name: WIZ_RUNTIME_METADATA_POD_NAME
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.name
              - name: WIZ_RUNTIME_METADATA_NODE_NAME
                valueFrom:
                  fieldRef:
                    fieldPath: spec.nodeName
              - name: K8S_NAMESPACE
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.namespace
              - name: WIZ_TERMINATION_GRACE_PERIOD
                value: "60s"
              - name: WIZ_CHART_VERSION
                value: "GOLDEN_STATIC_VALUE"
              resources:
                {}
          volumes:
---
# Source: wiz-kubernetes-integration/charts/wiz-kubernetes-connector/templates/service-account-cluster-reader.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: wiz-cluster-reader
  namespace: "release-helm-namespace"
  labels:
    helm.sh/chart: "GOLDEN_STATIC_VALUE"
    app.kubernetes.io/name: wiz-kubernetes-connector
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/version: "2.5"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
---
# Source: wiz-kubernetes-integration/charts/wiz-kubernetes-connector/templates/service-account-modify-connector.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: wiz-auto-modify-connector
  namespace: "release-helm-namespace"
  labels:
    helm.sh/chart: "GOLDEN_STATIC_VALUE"
    app.kubernetes.io/name: wiz-kubernetes-connector
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/version: "2.5"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,pre-delete
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "-1"
---
# Source: wiz-kubernetes-integration/charts/wiz-admission-controller/templates/opawebhook.yaml
apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata:
  name: release-test-wiz-admission-controller-cert
  namespace: "release-helm-namespace"
  labels:
    helm.sh/chart: "GOLDEN_STATIC_VALUE"
    app.kubernetes.io/chartName: wiz-admission-controller
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/version: "2.7"
    app.kubernetes.io/managed-by: Helm
  annotations:
    # Using helm hook to create certs only for chart install
    "helm.sh/hook": "pre-install, pre-upgrade"
    "helm.sh/hook-delete-policy": "before-hook-creation"
data:
  tls.crt: "GOLDEN_STATIC_VALUE"
  tls.key: "GOLDEN_STATIC_VALUE"
---
# Source: wiz-kubernetes-integration/charts/wiz-kubernetes-connector/templates/secret-connector.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-test-connector
  namespace: "release-helm-namespace"
  labels:
    helm.sh/chart: "GOLDEN_STATIC_VALUE"
    app.kubernetes.io/name: wiz-kubernetes-connector
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/version: "2.5"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-install, pre-upgrade
    "helm.sh/hook-weight": "-1"
type: Opaque
data:
  connectorData: "e30="
---
# Source: wiz-kubernetes-integration/charts/wiz-kubernetes-connector/templates/service-account-cluster-reader.yaml
apiVersion: v1
kind: Secret
metadata:
  name: wiz-cluster-reader-token
  namespace: "release-helm-namespace"
  labels:
    helm.sh/chart: "GOLDEN_STATIC_VALUE"
    app.kubernetes.io/name: wiz-kubernetes-connector
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/version: "2.5"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
    kubernetes.io/service-account.name: wiz-cluster-reader
type: kubernetes.io/service-account-token
---
# Source: wiz-kubernetes-integration/templates/secrets-wiz-api-token.yaml
apiVersion: v1
kind: Secret
metadata:
  name: wiz-api-token
  namespace: "release-helm-namespace"
  labels:
    helm.sh/chart: "GOLDEN_STATIC_VALUE"
    app.kubernetes.io/name: wiz-kubernetes-integration
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/managed-by: Helm
  annotations: # Secret used by per-install hook in wiz-kubernetes-connector
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-1"
stringData:
  clientId: "clientid"
  clientToken: "clientsecret"
---
# Source: wiz-kubernetes-integration/charts/wiz-kubernetes-connector/templates/service-account-modify-connector.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: wiz-auto-modify-connector
  namespace: "release-helm-namespace"
  labels:
    helm.sh/chart: "GOLDEN_STATIC_VALUE"
    app.kubernetes.io/name: wiz-kubernetes-connector
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/version: "2.5"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,pre-delete
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "-1"
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    resourceNames: ["release-test-connector"]
    verbs: ["update", "get"]
  - apiGroups: [""]
    resources: ["secrets"]
    resourceNames: [
      "wiz-api-token",
      "wiz-cluster-reader-token",
    ]
    verbs: ["get"]
---
# Source: wiz-kubernetes-integration/charts/wiz-kubernetes-connector/templates/service-account-modify-connector.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: wiz-auto-modify-connector
  namespace: "release-helm-namespace"
  labels:
    helm.sh/chart: "GOLDEN_STATIC_VALUE"
    app.kubernetes.io/name: wiz-kubernetes-connector
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/version: "2.5"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,pre-delete
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "-1"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name:  wiz-auto-modify-connector
subjects:
- kind: ServiceAccount
  name: wiz-auto-modify-connector
  namespace: "release-helm-namespace"
---
# Source: wiz-kubernetes-integration/charts/wiz-kubernetes-connector/templates/job-create-connector.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: wiz-kubernetes-connector-create-connector
  namespace: "release-helm-namespace"
  labels:
    helm.sh/chart: "GOLDEN_STATIC_VALUE"
    app.kubernetes.io/name: wiz-kubernetes-connector
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/version: "2.5"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded 
    rollme.wizApiTokenHash: ce8124bc1b0fbc0cb5cd47338ca0c7d5f5446d79936e443a201d96b192a7bd65
    rollme.proxyHash: 9aa53d69075371b3fa23ebeea2fd2416ea81fb533499d071ca2d576f17c7c886
    rollme.brokerHash: 115ba85431eeaf8db3ff2173aee02d16e67df1555d5e1ef74cfa7ac0d812cab2   

spec:
  ttlSecondsAfterFinished: 60
  manualSelector: true
  selector:
    matchLabels:
      app.kubernetes.io/name: wiz-kubernetes-connector
      app.kubernetes.io/instance: release-test
  backoffLimit: 1
  template:
    metadata:
      labels:
        
        helm.sh/chart: "GOLDEN_STATIC_VALUE"
        app.kubernetes.io/name: wiz-kubernetes-connector
        app.kubernetes.io/instance: release-test
        app.kubernetes.io/version: "2.5"
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: wiz-auto-modify-connector
      restartPolicy: "Never"
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
      containers:
        - name: wiz-connector-creator
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 1000
          image: wiziopublic.azurecr.io/wiz-app/wiz-broker:2.5
          imagePullPolicy: Always
          command:
            - "wiz-broker"
          args:
            
            - create-kubernetes-connector
            - --api-server-endpoint
            - "https://kubernetes.default.svc.cluster.local"
            - --secrets-namespace
            - "release-helm-namespace"
            - --service-account-token-secret-name
            - "wiz-cluster-reader-token"
            - --output-secret-name
            - "release-test-connector"
            - --is-on-prem=true
            - --connector-name
            - "OnPrem-Cluster"
            - --service-type
            - "Kubernetes"
            - --subscription-external-id
            - "OnPrem-Sub"
            - --cluster-tags
            - "{\"ctag\":\"onprem-ctag\"}"
            - --subscription-tags
            - "{\"environment\":\"OnPrem\",\"stag\":\"onprem-stag\"}"
            - --wait=true
          env:
          - name: LOG_LEVEL
            value: info
          - name: WIZ_CLIENT_ID
            valueFrom:
              secretKeyRef:
                name: wiz-api-token
                key: clientId
                optional: false
          - name: WIZ_CLIENT_TOKEN
            valueFrom:
              secretKeyRef:
                name: wiz-api-token
                key: clientToken
                optional: false
          - name: WIZ_ENV
            value: 
          resources:
            null
---
# Source: wiz-kubernetes-integration/charts/wiz-kubernetes-connector/templates/job-delete-connector.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: wiz-kubernetes-connector-delete-connector
  namespace: "release-helm-namespace"
  labels:
    helm.sh/chart: "GOLDEN_STATIC_VALUE"
    app.kubernetes.io/name: wiz-kubernetes-connector
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/version: "2.5"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    rollme.proxyHash: 9aa53d69075371b3fa23ebeea2fd2416ea81fb533499d071ca2d576f17c7c886
    rollme.brokerHash: 115ba85431eeaf8db3ff2173aee02d16e67df1555d5e1ef74cfa7ac0d812cab2 

spec:
  ttlSecondsAfterFinished: 60
  manualSelector: true
  selector:
    matchLabels:
      app.kubernetes.io/name: wiz-kubernetes-connector
      app.kubernetes.io/instance: release-test
  backoffLimit: 1
  template:
    metadata:
      labels:
        
        helm.sh/chart: "GOLDEN_STATIC_VALUE"
        app.kubernetes.io/name: wiz-kubernetes-connector
        app.kubernetes.io/instance: release-test
        app.kubernetes.io/version: "2.5"
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: wiz-auto-modify-connector
      restartPolicy: "Never"
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
      containers:
        - name: wiz-connector-delete
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 1000
          image: wiziopublic.azurecr.io/wiz-app/wiz-broker:2.5
          imagePullPolicy: Always
          command: ["/bin/sh", "-c"]
          args:
            - >
              wiz-broker delete-kubernetes-connector 
              --input-secrets-namespace 
              "release-helm-namespace" 
              --input-secret-name 
              "release-test-connector" 
              || true
          env:
          - name: LOG_LEVEL
            value: info
          - name: WIZ_CLIENT_ID
            valueFrom:
              secretKeyRef:
                name: wiz-api-token
                key: clientId
                optional: false
          - name: WIZ_CLIENT_TOKEN
            valueFrom:
              secretKeyRef:
                name: wiz-api-token
                key: clientToken
                optional: false
          - name: WIZ_ENV
            value: ""
          resources:
            null
---
# Source: wiz-kubernetes-integration/charts/wiz-admission-controller/templates/opawebhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: release-test-wiz-admission-controller-misconfigurations
  namespace: "release-helm-namespace"
  labels:
    helm.sh/chart: "GOLDEN_STATIC_VALUE"
    app.kubernetes.io/chartName: wiz-admission-controller
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/version: "2.7"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": "post-install, post-upgrade"
    "helm.sh/hook-delete-policy": "before-hook-creation"
webhooks:
- name: misconfigurationsadmissionvalidator.wiz.io
  admissionReviewVersions: ["v1", "v1beta1"]
  clientConfig:
    service:
      namespace: release-helm-namespace
      name: release-test-wiz-admission-controller
      path: /opa-validator
      port: 443
    caBundle: "GOLDEN_STATIC_VALUE"
  rules:
    - apiGroups:
      - '*'
      apiVersions:
      - '*'
      operations:
      - CREATE
      - UPDATE
      resources:
      - namespaces
      - configmaps
      - ingresses
      - services
      - pods
      - deployments
      - jobs
      - cronjobs
      - replicasets
      - statefulsets
      - daemonsets
  namespaceSelector:
    matchExpressions:
    - key: kubernetes.io/metadata.name
      operator: NotIn
      values:
      - kube-system
      - kube-node-lease
  timeoutSeconds: 8
  failurePolicy: Ignore
  sideEffects: None
---
# Source: wiz-kubernetes-integration/charts/wiz-admission-controller/templates/opawebhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: release-test-wiz-admission-controller-kubernetes-audit-logs
  namespace: "release-helm-namespace"
  labels:
    helm.sh/chart: "GOLDEN_STATIC_VALUE"
    app.kubernetes.io/chartName: wiz-admission-controller
    app.kubernetes.io/instance: release-test
    app.kubernetes.io/version: "2.7"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": "post-install, post-upgrade"
    "helm.sh/hook-delete-policy": "before-hook-creation"
webhooks:
- name: kubernetesauditlogs.wiz.io
  admissionReviewVersions: ["v1", "v1beta1"]
  clientConfig:
    service:
      namespace: release-helm-namespace
      name: release-test-wiz-admission-controller-audit-log-collector
      path: /kubernetes-audit-logs
      port: 443
    caBundle: "GOLDEN_STATIC_VALUE"
  rules:
    - apiGroups:
      - '*'
      apiVersions:
      - '*'
      operations:
      - '*'
      resources:
      - namespaces
      - secrets
      - configmaps
      - storageclasses
      - persistentvolumes
      - persistentvolumeclaims
      - controllerrevisions
      - ingresses
      - services
      - networkpolicies
      - pods
      - deployments
      - jobs
      - cronjobs
      - replicasets
      - statefulsets
      - daemonsets
      - replicationcontrollers
      - subjectaccessreviews
      - selfsubjectrulesreviews
      - selfsubjectreviews
      - pods/exec
      - pods/portforward
      - pods/attach
      - clusterroles
      - roles
      - rolebindings
      - clusterrolebindings
      - serviceaccounts
    - apiGroups:
      - '*'
      apiVersions:
      - '*'
      operations:
      - DELETE
      resources:
      - events
  namespaceSelector:
    matchExpressions:
    - key: kubernetes.io/metadata.name
      operator: NotIn
      values:
      - kube-system
      - kube-node-lease
  timeoutSeconds: 8
  failurePolicy: Ignore
  sideEffects: None
