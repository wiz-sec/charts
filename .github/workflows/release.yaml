name: tag version of resources for v3 pipeline

on:
  push:
    branches:
      - main
      - master


permissions:
  contents: read
  id-token: write
  packages: write

jobs:
  list-changed-charts:
    name: list changed charts
    runs-on: ubuntu-latest
    outputs:
      ecr_matrix: ${{ steps.changed-charts.outputs.charts_matrix }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # https://github.com/actions/checkout/releases/tag/v4.2.2
        with:
          fetch-depth: 0
      - name: get changed charts
        id: changed-charts
        run: |
          CHANGED_CHART_DIRS="$(echo "$CHANGED_FILES" | grep -Eo '^[^.][^/]+' | sort -u)"
          echo "changes: ${CHANGED_CHART_DIRS}"
          CHANGES_MATRIX=()
          for change in $CHANGED_CHART_DIRS; do
            CHANGES_MATRIX+=("$(
              jq -ncM '$ARGS.named' \
              --arg chart "$change"
              --arg version "$(yq .version "$change/Chart.yaml")" \
            )")
          done
          echo "CHANGES_MATRIX: ${CHANGES_MATRIX[*]}"
          if [[ -n "${CHANGES_MATRIX[@]}" ]]; then
          # https://stackoverflow.com/questions/26808855/how-to-format-a-bash-array-as-a-json-array
            MATRIX="$(printf '%s\n' "${CHANGES_MATRIX[@]}" | sort -u | jq -sc . )"
            echo "charts_matrix=${MATRIX}" >> $GITHUB_OUTPUT
          fi

  push-chart-to-ghcr:
    needs: list-changed-charts
    strategy:
      matrix:
        include: ${{ fromJson(needs.list-changed-charts.outputs.ecr_matrix) }}
    name: push chart to ghcr
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # https://github.com/actions/checkout/releases/tag/v4.2.2
      - name: update chart dependencies
        run: |
          cd ${{ matrix.chart }}
          helm dependency update

      - name: Install cosign
        uses: sigstore/cosign-installer@3454372f43399081ed03b604cb2d021dabca52bb # https://github.com/sigstore/cosign-installer/releases/tag/v3.8.2

      - name: Log into ghcr.io
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # https://github.com/docker/login-action/releases/tag/v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: helm package
        id: helm-package
        run: |
          cd ${{matrix.chart }}
          helm package . --version ${{ matrix.version }}

      - name: helm push
        id: helm-push
        run: |
          cd ${{matrix.chart }}
          helm push ${{matrix.chart }}-${{ matrix.version }}.tgz \
                    oci://ghcr.io/${{ github.repository }} \
                    --version ${{ matrix.version }} | tee push_output.txt
          digest="$(cat push_output.txt | grep -Eo "sha256:.*$")"
          echo "digest=${digest}" >> $GITHUB_OUTPUT

      - name: Sign the container image
        run: cosign sign --yes ghcr.io/${{ github.repository }}@${{ steps.helm-push.outputs.digest }}
        # cosign sign --yes --rekor-url "https://rekor.sigstore.dev/" ${{ steps.digest.outputs.image_sha }}

      - name: Verify the image signing
        run: |
          # TODO: this will fail - since we push from a tag...
          cosign verify ${{ steps.helm-push.outputs.digest }} \
            --rekor-url "https://rekor.sigstore.dev/"  \
            --certificate-identity "https://github.com/${{ github.repository }}/.github/workflows/release.yaml@refs/heads/main" \
            --certificate-oidc-issuer "https://token.actions.githubusercontent.com" | \
          jq .