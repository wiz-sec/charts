apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "wiz-sensor.fullname" . }}
  labels: {{- include "wiz-sensor.labels" . | nindent 4 }}
  namespace: {{ .Release.Namespace }}

spec:
  selector:
    matchLabels: {{- include "wiz-sensor.selectorLabels" . | nindent 6 }}

  updateStrategy:
{{ toYaml .Values.daemonset.updateStrategy | indent 4 }}

  template:
    metadata:
      labels: {{- include "wiz-sensor.labels" . | nindent 8 }}

      annotations:
        container.apparmor.security.beta.kubernetes.io/wiz-sensor: unconfined
        cluster-autoscaler.kubernetes.io/enable-ds-eviction: "true"
        {{- with (coalesce .Values.global.podAnnotations (coalesce .Values.daemonset.podAnnotations .Values.podAnnotations)) }}
        {{- toYaml . | nindent 8 }}
        {{- end }}

    spec:
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ include "wiz-sensor.serviceAccountName" . }}
      {{- end }}

      {{- with (coalesce .Values.global.nodeSelector .Values.daemonset.nodeSelector) }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- if .Values.daemonset.priorityClassName }}
      priorityClassName: {{ .Values.daemonset.priorityClassName }}
      {{- end }}

      {{- with (coalesce .Values.global.affinity .Values.daemonset.affinity) }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- if .Values.hostNetwork }}
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      {{- end }}

      hostPID: true
      hostIPC: true

      {{- with (coalesce .Values.global.tolerations .Values.daemonset.tolerations) }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      restartPolicy: Always

      containers:
      - name: wiz-sensor
        {{- if (coalesce .Values.global.image.registry .Values.image.registry) }}
        image: {{ printf "%s/%s:%s" (coalesce .Values.global.image.registry .Values.image.registry) .Values.image.repository .Values.image.tag }}
        {{- else }}
        image: {{ printf "%s:%s" .Values.image.repository .Values.image.tag }}
        {{- end }}
        imagePullPolicy: {{ coalesce .Values.global.image.pullPolicy .Values.image.pullPolicy }}
        {{- with .Values.image.args }}
        args:
          {{- toYaml . | nindent 8 }}
        {{- end }}

        securityContext:
          capabilities:
            add:
            - SYS_ADMIN # moving between namespaces
            - SYS_CHROOT # moving between namespaces
            - SYS_RESOURCE # eBPF
            - SYS_RAWIO # file hashing
            - DAC_OVERRIDE # file hashing
            - DAC_READ_SEARCH # file hashing
            - NET_ADMIN # network events
            - NET_RAW # network events
            - IPC_LOCK # eBPF
            - FOWNER # file hashing
            - SYS_PTRACE # eBPF
        {{- if not .Values.disallowRuntimeResponse }}
            - KILL # response
        {{- end }}

          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2202
          runAsGroup: 2202
          {{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion }}
          seccompProfile:
            type: Unconfined
          {{- end }}
          seLinuxOptions:
            user: "system_u"
            role: "system_r"
            level: "s0"
            {{- if .Values.flatcarLinuxNodes }}
            type: "unconfined_t"
            {{- else }}
            type: "spc_t"
            {{- end }}

        env:
        - name: WIZ_TMP_STORE
          value: "/wiz-sensor-store/"
        - name: WIZ_HOST_STORE
        {{- if .Values.daemonset.sensorHostCacheCreate }}
          value: "/wiz-host-cache/"
        {{- else }}
          value: "/wiz-sensor-store/"
        {{- end }}
        - name: WIZ_RAMFS_STORE
          value: "/tmp/"
        - name: LOG_FILE
          value: "/wiz-sensor-store/sensor.log"
        - name: MY_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_POD_UID
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: MY_APIKEY_SECRET_NAME
          value: {{ include "wiz-sensor.secretName" . }}
        - name: AWS_EC2_METADATA_DISABLED
          value: "true"
        - name: CRI_SOCKET_CUSTOM_PATH
          value: {{ .Values.daemonset.criSocketPath }}
        - name: HTTP_PROXY_URL
          value: {{ .Values.daemonset.httpProxyUrl }}
        - name: HTTP_PROXY_USERNAME
          value: {{ .Values.daemonset.httpProxyUsername }}
        - name: HTTP_PROXY_PASSWORD
          value: {{ .Values.daemonset.httpProxyPassword }}
        - name: HTTP_PROXY_CERT
          value: {{ .Values.daemonset.httpProxyCaCert }}
        {{- if .Values.ciMode }}
        - name: CI_MODE
          value: "true"
        {{- end }}
        - name: BACKEND_ENV
          value: {{ coalesce .Values.global.wizApiToken.clientEndpoint .Values.wizApiToken.clientEndpoint .Values.backendEnv "prod" }}
        {{- if and (not .Values.gkeAutopilot) .Values.tenantSuffix }}
        - name: TENANT_SUFFIX
          value: {{ .Values.tenantSuffix }}
        {{- end }}
        - name: SENSOR_CLUSTER_NAME
          value: {{ .Values.sensorClusterName }}
        - name: RUST_LOG
          value: {{ include "wiz-sensor.fileLogLevel" . }}
        - name: STDOUT_LOG
          value: {{ include "wiz-sensor.stdoutLogLevel" . }}
        - name: POD_MEM_LIMITS
          valueFrom:
            resourceFieldRef:
              containerName: wiz-sensor
              resource: limits.memory
              divisor: "1Mi"
        - name: POD_CPU_LIMITS
          valueFrom:
            resourceFieldRef:
              containerName: wiz-sensor
              resource: limits.cpu
              divisor: "1m"
        {{- if .Values.disallowRuntimeResponse }}
        - name: DISALLOW_RUNTIME_RESPONSE
          value: "true"
        {{- end}}
        {{- with .Values.podCustomEnvironmentVariables }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.global.podCustomEnvironmentVariables }}
          {{- toYaml . | nindent 8 }}
        {{- end }}

        volumeMounts:
        {{- with .Values.customVolumeMounts }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.global.customVolumeMounts }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- if .Values.daemonset.sensorHostCacheCreate }}
        - name: sensor-host-cache
          mountPath: /wiz-host-cache/
        {{- end }}

        - name: sensor-store
          mountPath: /wiz-sensor-store/
        - name: tmp-store
          mountPath: /tmp/
        - name: api-client-secret
          mountPath: /api-client/
        {{- if not .Values.gkeAutopilot }}
        - name: api-endpoint-name-secret
          mountPath: /api-endpoint-name/
        {{- end }}
        {{- if (or .Values.global.httpProxyConfiguration.enabled .Values.httpProxyConfiguration.enabled) }}
        - name: proxy-secret
          mountPath: /proxy-config/
        {{- end }}

        {{- if .Values.daemonset.resources }}
        resources:
          {{- if .Values.daemonset.resources.limits }}
          limits:
{{ toYaml .Values.daemonset.resources.limits | indent 12 }}
          {{- end }}
          {{- if and (not .Values.gkeAutopilot) .Values.daemonset.resources.requests }}
          requests:
{{ toYaml .Values.daemonset.resources.requests | indent 12 }}
          {{- end }}
        {{- end }}

      terminationGracePeriodSeconds: {{ .Values.daemonset.terminationGracePeriodSeconds }}
      {{- if .Values.imagePullSecret.required }}
      imagePullSecrets:
        {{ include "wiz-sensor.imagePullSecretList" . }}
      {{- end }}
      volumes:
      {{- with .Values.customVolumes }}
        {{- toYaml . | nindent 6 }}
      {{- end }}
      {{- with .Values.global.customVolumes }}
        {{- toYaml . | nindent 6 }}
      {{- end }}
      {{- if .Values.daemonset.sensorHostCacheCreate }}
      - name: sensor-host-cache
        hostPath:
          path: {{ .Values.daemonset.sensorHostCacheFolder }}
          type: DirectoryOrCreate
      {{- end }}
      - name: api-client-secret
        secret:
          secretName: {{ include "wiz-sensor.secretName" . }}
          items:
            - key: clientId
              path: clientId
            - key: clientToken
              path: clientToken
      {{- if not .Values.gkeAutopilot }}
      - name: api-endpoint-name-secret
        secret:
          secretName: {{ include "wiz-sensor.secretName" . }}
          optional: true
          items:
            - key: clientEndpoint
              path: clientEndpoint
      {{- end }}
      {{- if (or .Values.global.httpProxyConfiguration.enabled .Values.httpProxyConfiguration.enabled) }}
      - name: proxy-secret
        secret:
          secretName: {{ include "wiz-sensor.proxySecretName" . }}
          items:
            - key: httpsProxy
              path: https-proxy
            - key: caCertificate
              path: ca-cert
      {{- end }}
      - name: sensor-store
        emptyDir:
          sizeLimit: "1Gi"
      - name: tmp-store
        emptyDir:
          sizeLimit: "100Mi"
          medium: "Memory"
