# Default values for wiz-sensor.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: "" # Override the release’s name.
fullnameOverride: "" # Override the release’s full name.

# Labels applied on all the resources (not used for selection)
commonLabels: {}

# Annotations to add to the Sensor pod
podAnnotations: {}

# Additional environment variables to add to the components Pods as pairs “name”, “value”.
podCustomEnvironmentVariables: []

# Sensor-based workload scanner configuration. The following variables apply only to on-premises workloads.
# Do not enable or modify these variables for cloud workloads.
diskScan:
  # Enable Sensor based workload scanning. Only applicable in on-prem environments.
  enabled: false
  # The runtime config to be used by the Sensor based workload scanner. Passing an empty object will use the default config.
  config: {}
  # Overriding default name for runtime config name. Default "{.Release.Name}-disk-scan-config"
  configName: ""

# Sensor-based API security solution
apiSecurity:
  enabled: false

# Expose some metrics to be consumed by Prometheus and other Metrics servers.
# The default port can be changed in case of conflicts
exposeMetrics: false
metricsPort: 9100

# create a SecurityContextConstraints CRD for our service-account - used when installing on OpenShift clusters
openshift: false

# set simpler resource policies for GKE autopilot - basically the requests are the same as the limits
# see https://cloud.google.com/kubernetes-engine/docs/concepts/autopilot-resource-requests#resource-limits .
# there are also other small changes
gkeAutopilot: false

# use a custom SELinux type that is required by flatcar Linux nodes, but is incompatible with some
# other node types (like AWS bottlerocket)
flatcarLinuxNodes: false

# Set the cluster name in the Wiz portal. Will override the native cloud name. (optional)
sensorClusterName: ""

# additional volumes to mount in the sensor pod (usually used for extra CA certificates)
customVolumes: []
customVolumeMounts: []

# set to true to disallow runtime response from the sensor for this deployment
disallowRuntimeResponse: false

# set to true to run the sensor in the host network namespace
hostNetwork: false

# A range of seconds. Given a value X, the Sensor will choose a random value R between 0 and X.
# It will then delay its start by R seconds. This can be useful to reduce load on shared resources
# (mainly API-server) when a large amount of Sensors are starting concurrently.
startDelayRange: 0

# Run in fully privileged mode. Usually used as compatibility mode for unusual setups.
privileged: false

# Set to true to enable debug logging (useful for debugging install issues). Do not use
# for a production deployment.
debug: false

clusterExternalId: "" # Required for OKE clusters - specify the cluster's OCID
subscriptionExternalId: "" # Optional. Used to associate the installation with a Subscription if none can be obtained from IMDS (e.g. on-prem)
clusterTags: {} # Optional. List of key: value tags to be added to KubernetesCluster object associated with this installation
subscriptionTags: {} # Optional. List of key: value tags to be added to Subscription object associated with this installation

# the API key identifying this installation (for comm with Wiz portal)
wizApiToken:
  secret:
    # Specifies whether an api token secret should be created
    # If create is false you need to create it with clientId, clientToken
    create: true
    # Annotations to add to the secret
    annotations: {}
    # The name of the secret to use.
    # If not set, a name is generated using the fullname template
    name: ""

  # The chart will refuse to install unless these are set to valid values
  clientId: ""
  clientToken: ""
  clientEndpoint: "" # Set custom endpoint - should be "fedramp" for FEDRAMP environments

httpProxyConfiguration:
  # set to true to enable the use of a proxy. creates a secret with proxy configuration
  enabled: false

  # Specifies whether a proxy secret should be created
  # If create is false you need to:
  #  1. Create a secret with httpsProxy and caCertificate
  #  2. Set secretName to reference your secret
  create: true
  secretName: "" # Overriding default name for proxy secret name (.Release.Name + "-proxy-configuration" by default)

  # Annotations to be set on the proxy secret
  annotations: {}

  # a URL of the form: http(s)://username:password@127.0.0.1:8080
  # the username and password are optional and should be used when basic-auth is the
  # proxy authentication method
  httpsProxy: ""

  # (optional) Proxy CA certificate in PEM format. This is required for TLS intercept proxies
  caCertificate: ""

  # (optional) Proxy client certificate in PEM format. This is required for client certificate authentication.
  # The file should contain a certificate and a private key in PEM format.
  clientCertificate: ""

imagePullSecret:
  # Set to false if image is retrieved from a registry that doesn't require pull secret
  # When set to false - all other attributes are meaningless
  required: true

  # When set to true - it will create a pull secret using username and password bellow
  # When set to false - it will expect a secret with given name below to be available within the cluster
  create: true

  # This value is a must in order to pull the image from a private repository. We use helm
  # to create a docker formatted json, encoded in base64.
  # In case you want use an existing value please mark "create" above as false.
  # For general directions on how to pre-create this kind of secret please refer to:
  # https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/#registry-secret-existing-credentials
  # the default registry server URL to use in the secret is wizio.azurecr.io. For FEDRAMP use wizfedramp.azurecr.us.
  username: ""
  password: ""

  # override the default name of the pull secret
  # If not set and create is true, a name is generated using the fullname template
  name: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true

  # Annotations to add to the service account
  annotations: {}

  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

  # Create RBAC resources for our service account.
  # Needed to fetch kubernetes metadata from the api-server
  rbac: true

image:
  # set registry to an empty string if the image is local. The final image pulled is
  # "registry/repository:tag" and here this is "wizio.azurecr.io/sensor:v1".
  # For FEDRAMP use wizfedramp.azurecr.us, for a final URL of "wizfedramp.azurecr.us/sensor:v1".
  registry: wizio.azurecr.io
  repository: sensor
  args: {}
  tag: "v1"
  pullPolicy: Always
  # the default is "wizio.azurecr.io/wiz-app/onprem-scanner:v1"
  diskScanRepository: wiz-app/onprem-scanner
  diskScanArgs: {}
  diskScanTag: "v1"
  diskScanPullPolicy: Always

daemonset:
  # cache folder on the node
  sensorHostCacheCreate: true
  sensorHostCacheFolder: "/var/lib/wiz/"

  # customize nodes matched
  nodeSelector: {}

  # customize priority class
  priorityClassName: ""

  affinity:
    # run on linux arm64 or amd64 nodes
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: kubernetes.io/os
            operator: In
            values:
            - linux
          - key: kubernetes.io/arch
            operator: In
            values:
            - arm64
            - amd64

  tolerations:
  # Makes pods run on ARM64 as well
  - key: kubernetes.io/arch
    operator: Equal
    value: arm64
    effect: NoSchedule
  # Make pods run on GKE spot an preemptible nodes
  - key: "cloud.google.com/gke-spot"
    operator: Equal
    value: "true"
    effect: NoSchedule
  - key: "cloud.google.com/gke-preemptible"
    operator: Equal
    value: "true"
    effect: NoSchedule
  # Make pods run on Azure spot nodes
  - key: kubernetes.azure.com/scalesetpriority
    operator: Equal
    value: spot
    effect: NoSchedule
  # Uncomment to make pods run on control-plane nodes. Relevant for OpenShift and other self-hosted clusters
  #- key: node-role.kubernetes.io/infra
  #  effect: NoSchedule
  #- key: node-role.kubernetes.io/infra
  #  effect: NoExecute
  #- key: node-role.kubernetes.io/master
  #  effect: NoSchedule
  #- key: node.ocs.openshift.io/storage
  #  value: "true"
  #  effect: NoSchedule

  # Default strategy to update the daemonset
  updateStrategy:
    type: RollingUpdate

  # Time for which kubernetes waits for the sensor pod to terminate gracefully.
  terminationGracePeriodSeconds: 90

  resources:
    # resource values for the wiz sensor, without API security enabled
    limits:
      cpu: "300m"
      memory: "300Mi"
    requests:
      cpu: "10m"
      memory: "50Mi"

    # in case the API security module is enabled, used increased limit values here
    apiSecurityLimits:
      cpu: "1"
      memory: "1Gi"

    # resource values for the Sensor based workload scanner
    diskScanLimits:
      cpu: "100m"
      memory: "700Mi"
    diskScanRequests:
      cpu: "10m"
      memory: "100Mi"

  # If a non-standard path is used please specify it here. Usually not required.
  criSocketPath: ""


# Don't touch the following section, it is used by the wiz-kubernetes-integration chart
global:
  nameOverride: ""
  fullnameOverride: ""
  commonLabels: {}

  wizApiToken:
    clientEndpoint: ""
    secret:
      name: ""

  httpProxyConfiguration:
    secretName: ""

  image:
    registry: ""
    pullPolicy: ""
  imagePullSecrets: []
  podAnnotations: {}
  podCustomEnvironmentVariables: []
  customVolumes: []
  customVolumeMounts: []
  nodeSelector: {}
  affinity: {}
  tolerations: []
  clusterExternalId: "" # Required for OKE clusters - specify the cluster's OCID
  subscriptionExternalId: ""
  clusterTags: {}
  subscriptionTags: {}
