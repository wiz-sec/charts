{{ if .Values.kubernetesAuditLogsWebhook.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "wiz-kubernetes-audit-log-collector.name" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "wiz-kubernetes-audit-log-collector.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.kubernetesAuditLogsWebhook.replicaCount }}
  selector:
    matchLabels:
      {{- include "wiz-admission-controller.selectorLabels" . | nindent 6 }}
      {{- include "wiz-kubernetes-audit-log-collector.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        rollme.proxyHash: {{ include "wiz-admission-controller.proxyHash" . }}
        rollme.wizApiTokenHash: {{ include "wiz-admission-controller.wizApiTokenHash" . }}
        rollme.webhookCert: {{ include (print $.Template.BasePath "/opawebhook.yaml") . | sha256sum }}
        {{- with (coalesce .Values.global.podAnnotations .Values.podAnnotations) }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{/*
        `labels` includes `selectorLabels`
        */}}
        {{- include "wiz-kubernetes-audit-log-collector.labels" . | nindent 8 }}
    spec:
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
      {{- with (coalesce .Values.global.imagePullSecrets .Values.imagePullSecrets) }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "wiz-admission-controller.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.hostNetwork }}
      hostNetwork: true
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ coalesce .Values.global.image.registry .Values.image.registry }}/{{ coalesce .Values.global.image.repository .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
          - containerPort: {{ .Values.service.targetPort }}
          readinessProbe:
            httpGet:
              path: /ready
              port: {{ .Values.healthPort }}
              scheme: HTTPS
            {{- toYaml .Values.probes.readinessProbe | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /live
              port: {{ .Values.healthPort }}
              scheme: HTTPS
            {{- toYaml .Values.probes.livenessProbe | nindent 12 }}
          startupProbe:
            httpGet:
              path: /ready
              port: {{ .Values.healthPort }}
              scheme: HTTPS
            {{- toYaml .Values.probes.startupProbe | nindent 12 }}

          command:
          - "/usr/bin/wiz-admission-controller"
          - "--readiness-port={{ .Values.healthPort }}"
          # Server flags
          - "--port={{ .Values.service.targetPort }}"
          - "--tls-private-key-file=/var/server-certs/tls.key"
          - "--tls-cert-file=/var/server-certs/tls.crt"
          # Webhook flags
          - "--error-enforcement-method=AUDIT"
          - "--policy-enforcement-method=AUDIT"
          - "--cluster-external-id={{ .Values.webhook.clusterExternalId }}"
          # Kubernetes API server flags
          - "--namespace-cache-ttl={{ .Values.kubernetesApiServer.cacheNamespaceLabelsTTL }}"
          # K8S audit logs webhook flags
          - "--kubernetes-audit-logs-enabled=true"
          # Disable other webhooks
          - "--misconfiguration-enabled=false"
          - "--image-integrity-enabled=false"
          env:
          - name: WIZ_UPLOAD_BACKEND_STORAGE # TODO: remove once this is removed from the code
            value: "true"
          {{- if not .Values.wizApiToken.usePodCustomEnvironmentVariablesFile }}
          - name: WIZ_CLIENT_ID
            valueFrom:
              secretKeyRef:
                name: {{ include "wiz-admission-controller.secretApiTokenName" . | trim }}
                key: clientId
                optional: false
          - name: WIZ_CLIENT_TOKEN
            valueFrom:
              secretKeyRef:
                name: {{ include "wiz-admission-controller.secretApiTokenName" . | trim }}
                key: clientToken
                optional: false
          {{- end }}
          - name: WIZ_ENV
            value: {{ coalesce .Values.global.wizApiToken.clientEndpoint .Values.wizApiToken.clientEndpoint | quote }}
          {{- if or .Values.global.httpProxyConfiguration.enabled .Values.httpProxyConfiguration.enabled }}
          - name: HTTP_PROXY
            valueFrom:
              secretKeyRef:
                name: {{ include "wiz-admission-controller.proxySecretName" . | trim }}
                key: httpProxy
                optional: false
          - name: HTTPS_PROXY
            valueFrom:
              secretKeyRef:
                name: {{ include "wiz-admission-controller.proxySecretName" . | trim }}
                key: httpsProxy
                optional: false
          - name: NO_PROXY
            valueFrom:
              secretKeyRef:
                name: {{ include "wiz-admission-controller.proxySecretName" . | trim }}
                key: noProxyAddress
                optional: false
          {{- end }}
          {{- if .Values.logLevel }}
          - name: LOG_LEVEL
            value: {{ .Values.logLevel }}
          {{- end }}
          {{- with .Values.podCustomEnvironmentVariables }}
            {{- toYaml . | nindent 10 }}
          {{- end }}
          {{- with .Values.global.podCustomEnvironmentVariables }}
            {{- toYaml . | nindent 10 }}
          {{- end }}
          {{- if .Values.podCustomEnvironmentVariablesFile }}
          - name: CLI_ENV_FILE
            value: {{ .Values.podCustomEnvironmentVariablesFile }}
          - name: USE_CLI_ENV_FILE
            value: "true"
          {{- end }}
          - name: WIZ_RUNTIME_METADATA_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: WIZ_RUNTIME_METADATA_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          ## Enable debug webhook that only logs the request
          {{- if .Values.debugWebhook.enabled }}
          - name: WIZ_DEBUG_WEBHOOK_ENABLED
            value: "true"
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - mountPath: /var/server-certs
            name: server-certs
            readOnly: true
          {{- with .Values.customVolumeMounts }}
            {{- toYaml . | nindent 10 }}
          {{- end }}
          {{- with .Values.global.customVolumeMounts }}
            {{- toYaml . | nindent 10 }}
          {{- end }}
      volumes:
        - name: server-certs
          secret:
            defaultMode: 444
            secretName: {{ include "wiz-admission-controller.secretServerCert" . | trim }}
        {{- with .Values.customVolumes }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.global.customVolumes }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with (coalesce .Values.global.nodeSelector .Values.nodeSelector) }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with (coalesce .Values.global.affinity .Values.affinity) }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with (coalesce .Values.global.tolerations .Values.tolerations) }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}