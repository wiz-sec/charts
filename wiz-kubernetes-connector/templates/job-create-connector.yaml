{{- if .Values.autoCreateConnector.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "wiz-kubernetes-connector.name" . }}-create-connector-{{ randNumeric 5  }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "wiz-kubernetes-connector.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  
spec:
  manualSelector: true
  selector:
    matchLabels:
      {{- include "wiz-kubernetes-connector.selectorLabels" . | nindent 6 }}
  backoffLimit: 1
  template:
    metadata:
      {{- with (coalesce .Values.global.podAnnotations .Values.podAnnotations) }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{/*
        `labels` includes `selectorLabels`
        */}}
        {{- include "wiz-kubernetes-connector.labels" . | nindent 8 }}
    spec:
      {{- with (coalesce .Values.global.imagePullSecrets .Values.image.imagePullSecrets) }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ .Values.autoCreateConnector.serviceAccount.name }}
      restartPolicy: "Never"
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if or .Values.autoCreateConnector.customVolumes  .Values.global.customVolumes}}
      volumes:
      {{ with .Values.global.customVolumes }}
        {{- toYaml . | nindent 6 }}
      {{- end }}
      {{ with .Values.autoCreateConnector.customVolumes }}
        {{- toYaml . | nindent 6 }}
      {{- end }}
      {{- end }}
      containers:
        - name: wiz-connector-creator
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ coalesce .Values.global.image.registry .Values.image.registry }}/{{ coalesce .Values.global.image.repository .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: IfNotPresent
          command: ["wiz-broker"]
          args: [
            "create-kubernetes-connector",
            "--api-server-endpoint", 
            {{ include "wiz-kubernetes-connector.apiServerEndpoint" . | trim | quote }},
            "--secrets-namespace", 
            {{ .Release.Namespace | quote }},
            "--service-account-token-secret-name",
            {{ include "wiz-kubernetes-connector.clusterReaderToken" . | quote }},
            {{- if .Values.broker.enabled }}
            "--output-secret-name",
            {{ include "wiz-kubernetes-connector.connectorSecretName" . | trim | quote | nindent 12 }},
            {{- end }}
            "--is-on-prem={{ .Values.broker.enabled }}",
            {{ with .Values.autoCreateConnector.connectorName }}
            "--connector-name",
            {{ . | quote }},
            {{ end }}
            {{ with .Values.autoCreateConnector.clusterFlavor }}
            "--service-type",
            {{ . | quote }},
            {{ end }}
            ]
          env:
          {{- with .Values.global.podCustomEnvironmentVariables }}
            {{- toYaml . | nindent 10 }}
          {{- end }}
          {{- with .Values.autoCreateConnector.podCustomEnvironmentVariables }}
            {{- toYaml . | nindent 10 }}
          {{- end }}
          {{- if .Values.autoCreateConnector.podCustomEnvironmentVariablesFile }}
          - name: CLI_ENV_FILE
            value: {{ .Values.autoCreateConnector.podCustomEnvironmentVariablesFile }}
          - name: USE_CLI_ENV_FILE
            value: "true"
          {{- end }}
          {{- if not .Values.wizApiToken.usePodCustomEnvironmentVariablesFile }}
          - name: WIZ_CLIENT_ID
            valueFrom:
              secretKeyRef:
                name: {{ include "wiz-kubernetes-connector.apiTokenSecretName" . | trim }}
                key: clientId
                optional: false
          - name: WIZ_CLIENT_TOKEN
            valueFrom:
              secretKeyRef:
                name: {{ include "wiz-kubernetes-connector.apiTokenSecretName" . | trim }}
                key: clientToken
                optional: false
          {{- end }}
          - name: WIZ_ENV
            value: {{ coalesce .Values.global.wizApiToken.clientEndpoint .Values.wizApiToken.clientEndpoint | quote }}
          {{- if (coalesce .Values.global.httpProxyConfiguration.enabled .Values.httpProxyConfiguration.enabled) }}
          - name: HTTP_PROXY
            valueFrom:
              secretKeyRef:
                name: {{ include "wiz-kubernetes-connector.proxySecretName" . | trim }}
                key: httpProxy
                optional: false
          - name: HTTPS_PROXY
            valueFrom:
              secretKeyRef:
                name: {{ include "wiz-kubernetes-connector.proxySecretName" . | trim }}
                key: httpsProxy
                optional: false
          - name: NO_PROXY
            valueFrom:
              secretKeyRef:
                name: {{ include "wiz-kubernetes-connector.proxySecretName" . | trim }}
                key: noProxyAddress
                optional: false
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if or .Values.autoCreateConnector.customVolumeMounts .Values.global.customVolumeMounts }}
          volumeMounts:
          {{- with .Values.autoCreateConnector.customVolumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end -}}
          {{- with .Values.global.customVolumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- end }}            
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
