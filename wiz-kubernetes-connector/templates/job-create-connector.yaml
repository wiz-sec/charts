{{- if .Values.autoCreateConnector.enabled }}
  {{- if and (not (index .Values "wiz-broker" "enabled")) (empty .Values.autoCreateConnector.apiServerEndpoint) }}
    {{- required (cat "Error: failed rendering. apiServerEndpoint must be specified for public clusters when Wiz Broker is disabled.\n\n"
                   "To resolve it, you may fetch the public endpoint address with:\n"
                   "kubectl config view --minify -o jsonpath='{.clusters[0].cluster.server}'\n\n"
                   "And then in your values.yaml file, put the address under:\n\n"
                   "# Unified Helm Chart (wiz-kubernetes-integration).\n"
                   "wiz-kubernetes-connector:\n"
                   "  autoCreateConnector:\n"
                   "    apiServerEndpoint: <the k8s api server address>\n\n"
                   "# Standalone Helm Chart (wiz-kubernetes-connector).\n"
                   "autoCreateConnector:\n"
                   "  apiServerEndpoint: <the k8s api server address>") .Values.autoCreateConnector.apiServerEndpoint }}
  {{- end }}

apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "wiz-kubernetes-connector.name" . }}-create-connector
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "wiz-kubernetes-connector.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded 
    rollme.wizApiTokenHash: {{ include "wiz-kubernetes-connector.wizApiTokenHash" . }}
    rollme.proxyHash: {{ include "wiz-kubernetes-connector.proxyHash" . }}
    rollme.brokerHash: {{ include "wiz-kubernetes-connector.brokerHash" . }}
    {{- with (.Values.autoCreateConnector.createJobAnnotations) }}
      {{- toYaml . | nindent 4 }}
    {{- end }}   

spec:
  ttlSecondsAfterFinished: 60
  manualSelector: true
  selector:
    matchLabels:
      {{- include "wiz-kubernetes-connector.selectorLabels" . | nindent 6 }}
  backoffLimit: 1
  template:
    metadata:
      {{- with (coalesce .Values.global.podAnnotations .Values.podAnnotations) }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{/*
        `labels` includes `selectorLabels`
        */}}
        {{- include "wiz-kubernetes-connector.labels" . | nindent 8 }}
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ .Values.autoCreateConnector.serviceAccount.name }}
      restartPolicy: "Never"
      securityContext:
        {{- if hasKey .Values.global "lowPrivilegePodSecurityPolicy" }}
        {{- toYaml .Values.global.lowPrivilegePodSecurityPolicy | nindent 8 }}
        {{- else }}
        {{- toYaml .Values.global.podSecurityContext | nindent 8 }}
        {{- end }}
      {{- if or .Values.autoCreateConnector.customVolumes  .Values.global.customVolumes}}
      volumes:
      {{ with .Values.global.customVolumes }}
        {{- toYaml . | nindent 6 }}
      {{- end }}
      {{ with .Values.autoCreateConnector.customVolumes }}
        {{- toYaml . | nindent 6 }}
      {{- end }}
      {{- end }}
      containers:
        - name: wiz-connector-creator
          securityContext:
            {{- if hasKey .Values.global "lowPrivilegeSecurityPolicy" }}
            {{- toYaml .Values.global.lowPrivilegeSecurityPolicy | nindent 12 }}
            {{- else }}
            {{- toYaml .Values.global.securityContext | nindent 12 }}
            {{- end }}
          image: "{{ coalesce .Values.global.image.registry .Values.image.registry }}/{{ coalesce .Values.global.image.repository .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ coalesce .Values.global.image.pullPolicy .Values.image.pullPolicy }}
          command:
            {{- include "wiz-kubernetes-connector.entrypoint" . | nindent 12 }}
          args: {{- include "wiz-kubernetes-connector.generateArgsCreate" . | nindent 12 }}
          env:
          {{- if .Values.global.logLevel }}
          - name: LOG_LEVEL
            value: {{ .Values.global.logLevel }}
          {{- end }}
          {{- with .Values.global.podCustomEnvironmentVariables }}
            {{- toYaml . | nindent 10 }}
          {{- end }}
          {{- with .Values.autoCreateConnector.podCustomEnvironmentVariables }}
            {{- toYaml . | nindent 10 }}
          {{- end }}
          {{- if .Values.autoCreateConnector.podCustomEnvironmentVariablesFile }}
          - name: CLI_ENV_FILE
            value: {{ .Values.autoCreateConnector.podCustomEnvironmentVariablesFile }}
          - name: USE_CLI_ENV_FILE
            value: "true"
          {{- end }}
          {{- if not .Values.wizApiToken.usePodCustomEnvironmentVariablesFile }}
          - name: WIZ_CLIENT_ID
            valueFrom:
              secretKeyRef:
                name: {{ include "wiz-kubernetes-connector.apiTokenSecretName" . | trim }}
                key: clientId
                optional: false
          - name: WIZ_CLIENT_TOKEN
            valueFrom:
              secretKeyRef:
                name: {{ include "wiz-kubernetes-connector.apiTokenSecretName" . | trim }}
                key: clientToken
                optional: false
          {{- end }}
          - name: WIZ_ENV
            value: {{ coalesce .Values.global.wizApiToken.clientEndpoint .Values.wizApiToken.clientEndpoint | quote }}
          {{- if (or .Values.global.httpProxyConfiguration.enabled .Values.httpProxyConfiguration.enabled) }}
          - name: HTTP_PROXY
            valueFrom:
              secretKeyRef:
                name: {{ include "wiz-kubernetes-connector.proxySecretName" . | trim }}
                key: httpProxy
                optional: false
          - name: HTTPS_PROXY
            valueFrom:
              secretKeyRef:
                name: {{ include "wiz-kubernetes-connector.proxySecretName" . | trim }}
                key: httpsProxy
                optional: false
          - name: NO_PROXY
            valueFrom:
              secretKeyRef:
                name: {{ include "wiz-kubernetes-connector.proxySecretName" . | trim }}
                key: noProxyAddress
                optional: false
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if or .Values.autoCreateConnector.customVolumeMounts .Values.global.customVolumeMounts }}
          volumeMounts:
          {{- with .Values.autoCreateConnector.customVolumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end -}}
          {{- with .Values.global.customVolumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- end }}            
      {{- with (coalesce .Values.global.nodeSelector .Values.nodeSelector) }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with (coalesce .Values.global.affinity .Values.affinity) }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with (coalesce .Values.global.tolerations .Values.tolerations) }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
