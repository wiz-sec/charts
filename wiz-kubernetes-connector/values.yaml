# Default values for wiz-kubernetes-connector.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: "wiz-kubernetes-connector"

image:
  registry: wiziopublic.azurecr.io/wiz-app
  repository: wiz-broker
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""
  imagePullSecrets: []

clusterReader:
  installRbac: true
  serviceAccount:
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    name: "wiz-cluster-reader"
  secret:
    # Annotations to add to the secret
    annotations: {}

autoCreateConnector:
  enabled: true

  autoDeleteConnectorEnabled: true

  connectorName: "" # optional 
  clusterFlavor: "" # optional (EKS, AKS, GKE, OKE, OpenShift, Kubernetes)
  # Required arguments for broker.enabled = false
  apiServerEndpoint: ""

  serviceAccount:
    create: true
    createRbac: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    name: "wiz-auto-modify-connector"
  
  podCustomEnvironmentVariables: []
  podCustomEnvironmentVariablesFile: ""
  
  customVolumes: []
  customVolumeMounts: []

wizApiToken:
  clientId: ""
  clientToken: ""
  clientEndpoint: "" # Set custom endpoint (gov for example)

  secret:
    # Specifies whether an api token secret should be created
    # If create is false you need to create it with clientId, clientToken
    create: true
    # Annotations to add to the secret
    annotations: {}
    # The name of the secret to use.
    # If not set, a name is generated using the fullname template
    name: ""
  
  # API token should be read from an environment file, which is specified in podCustomEnvironmentVariablesFile
  usePodCustomEnvironmentVariablesFile: false

wizConnector: # Relevant only for broker.enabled = true & autoCreateConnector = false
  # Specifies whether a proxy secret should be created
  # If createSecret is false you need to:
  #  1. Create secret with this keys:
  #     CONNECTOR_ID, CONNECTOR_TOKEN, TARGET_DOMAIN, TARGET_IP, TARGET_PORT
  #  2. Set secretName to reference your secret
  createSecret: true
  # Annotations to add to the secret
  annotations: {}
  secretName: ""

  # Required arguments for autoCreateConnector = false
  connectorId: ""
  connectorToken: ""
  targetDomain: ""
  targetIp: ""
  targetPort: ""

broker:
  enabled: true
  targetIp: "kubernetes.default.svc.cluster.local"
  serviceAccount:
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    name: "wiz-broker"

  podCustomEnvironmentVariables: []
  podCustomEnvironmentVariablesFile: ""

  customVolumes: []
  customVolumeMounts: []
  

# Labels applied on all the resources (not used for selection)
commonLabels: {}

podAnnotations: {}

podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000

securityContext:
  runAsNonRoot: true
  runAsUser: 1000
  allowPrivilegeEscalation: false

resources: 
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

httpProxyConfiguration:
  enabled: false
  
  # Specifies whether a proxy secret should be created
  # If create is false you need to:
  #  1. Create secret with httpProxy, httpsProxy and noProxyAddress.
  #  2. Set secretName to reference your secret
  create: true
  annotations: {}
  secretName: "" # Overriding default name for proxy secret name (.Release.Name + "-proxy-configuration" by default)
  
  httpProxy: "" # http(s)://user:password@your-proxy:port (user, password and port are optional)
  httpsProxy: "" # http(s)://user:password@your-proxy:port (user, password and port are optional)
  noProxyAddress: "" # comma or space separated list of machine or domain names
