# Default values for wiz-kubernetes-connector.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: "" # Override the release’s name.
commonLabels: {} # Labels applied on all the resources (not used for selection)

image:
  registry: wiziopublic.azurecr.io/wiz-app
  repository: wiz-broker
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""
  imagePullSecrets: []

clusterReader:
  installRbac: true
  serviceAccount:
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    name: "wiz-cluster-reader"
  secret:
    # Annotations to add to the secret
    annotations: {}

autoCreateConnector:
  enabled: true

  autoDeleteConnectorEnabled: true

  connectorName: "" # optional 
  clusterFlavor: "" # optional (EKS, AKS, GKE, OKE, OpenShift, Kubernetes)
  # Required arguments for broker.enabled = false
  apiServerEndpoint: ""
  clusterExternalId: "" # Required for OKE clusters - specify the cluster's OCID

  serviceAccount:
    create: true
    createRbac: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    name: "wiz-auto-modify-connector"
  
  podCustomEnvironmentVariables: [] # Additional environment variables to add to the components Pods as pairs “name”, “value”.
  podCustomEnvironmentVariablesFile: ""
  
  customVolumes: [] # Additional volumes to add to the components Pods
  customVolumeMounts: [] # Additional volume mounts to add to the components Pods
  createJobAnnotations: {}
  deleteJobAnnotations: {}
  roleAnnotations: {}
  roleBindingAnnotations: {}

wizApiToken:
  clientId: "" # Client ID of the Wiz Service Account.
  clientToken: "" # Client secret of the Wiz Service Account.
  clientEndpoint: "" # Wiz endpoint to connect to (required for gov tenants).

  secret:
    # Should a Secret be created by the chart or not.
    # Set this to false if you wish to create the Secret yourself or using another tool.
    # The Secret should contain clientId for the ID and clientToken for the token.
    create: true
    # Annotations to add to the secret
    annotations: {}
    # The name of the secret to use.
    # If not set, a name is generated using the fullname template
    name: ""
  
  # API token should be read from an environment file, which is specified in podCustomEnvironmentVariablesFile
  usePodCustomEnvironmentVariablesFile: false

wizConnector: # Relevant only for broker.enabled = true & autoCreateConnector = false
  # Specifies whether a proxy secret should be created
  # If createSecret is false you need to:
  #  1. Create secret with this keys:
  #     CONNECTOR_ID, CONNECTOR_TOKEN, TARGET_DOMAIN, TARGET_IP, TARGET_PORT
  #  2. Set secretName to reference your secret
  createSecret: true
  # Annotations to add to the secret
  annotations: {}
  secretName: ""

  # Required arguments for autoCreateConnector = false
  connectorId: ""
  connectorToken: ""
  targetDomain: ""
  targetIp: ""
  targetPort: ""

broker:
  enabled: true
  targetIp: "kubernetes.default.svc.cluster.local"
  serviceAccount:
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    name: "wiz-broker"

  podCustomEnvironmentVariables: [] # Additional environment variables to add to the components Pods as pairs “name”, “value”.
  podCustomEnvironmentVariablesFile: ""

  customVolumes: [] # Additional volumes to add to the components Pods
  customVolumeMounts: [] # Additional volume mounts to add to the components Pods

podAnnotations: {}


podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000

securityContext:
  runAsNonRoot: true
  runAsUser: 1000
  allowPrivilegeEscalation: false

resources: 
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

# Redirect HTTP and/or HTTPS traffic through a proxy.
httpProxyConfiguration:
  enabled: false # Should the components use a proxy.

  # Should a Secret be created by the chart or not.
  # Set this to false if you wish to create the Secret yourself or using another tool.
  # The Secret should contain httpProxy, httpsProxy and noProxyAddress.
  create: true
  secretName: "" # The name of the proxy Secret.
  annotations: {} # Annotations to be set on the secret
  
  httpProxy: "" # URL to use as a proxy for outbound HTTP traffic.
  httpsProxy: "" # URL to use as a proxy for outbound HTTPS traffic.
  noProxyAddress: "" # Comma or space-separated list of machine or domain names. Note: This does not affect the Sensor.

# Global values to override chart values.
global:
  nameOverride: "" # Override the release’s name.
  commonLabels: {} # Labels applied on all the resources (not used for selection)

  # Wiz Service Account used to authenticate to Wiz.
  wizApiToken:
    clientEndpoint: "" # Wiz endpoint to connect to (required for gov tenants).
    
    secret:
      # The name of the Wiz Service Account Secret.
      name: ""

  # Redirect HTTP and/or HTTPS traffic through a proxy.
  httpProxyConfiguration:
    enabled: false # Should the components use a proxy.
    secretName: "" # The name of the proxy Secret.

  image:
    registry: "" # Registry to get the container images from.
    pullPolicy: "" # Container image pull policy. One of Always, Never, IfNotPresent.
  imagePullSecrets: [] # Secrets for container image registry keys as described in https://kubernetes.io/docs/concepts/containers/images/#referring-to-an-imagepullsecrets-on-a-pod

  podAnnotations: {} # Annotations to add to the components Pods.

  podCustomEnvironmentVariables: [] # Additional environment variables to add to the components Pods as pairs “name”, “value”.
  customVolumes: [] # Additional volumes to add to the components Pods
  customVolumeMounts: [] # Additional volume mounts to add to the components Pods
