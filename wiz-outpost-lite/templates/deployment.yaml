{{- range $values := (include "wiz-outpost-lite.runners" . | fromJson) }}
{{- with merge $values (omit $ "Values") }}
{{- if .Values.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "wiz-outpost-lite.fullname" . }}
  labels:
    {{- include "wiz-outpost-lite.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "wiz-outpost-lite.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
        container.apparmor.security.beta.kubernetes.io/{{ printf "%s-%s" .Chart.Name .runner }}: unconfined
      labels:
        {{- include "wiz-outpost-lite.selectorLabels" . | nindent 8 }}
        {{- with .Values.labels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: sa-{{ .runner }}
      {{- end }}
      restartPolicy: Always
      {{- if .Values.affinity }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ printf "%s-%s" .Chart.Name .runner }}
          image: "{{ .Values.image.repository }}/{{ .Values.image.name }}:{{ .Values.image.tag }}{{ .Values.image.tagSuffix }}"
          command: [ "/entrypoint"]
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.extraEnvConfigMap }}
          envFrom:
          - configMapRef:
              name: {{ .Values.extraEnvConfigMap | quote }}
          {{- end }}
          env:
          {{- range $key, $value := .Values.extraEnv }}
          - name: {{ $key }}
            value: "{{ $value }}"
          {{- end }}
          {{- if .Values.agent.env }}
          - name: ENV
            value: {{ .Values.agent.env }}
          {{- end}}
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: K8S_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: K8S_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: OUTPOST
            value: "1"
          - name: WIZ_OUTPOST_ID
            value: {{ required "Missing required value agent.outpostId is required" .Values.agent.outpostId | quote }}
          - name: WIZ_OUTPOST_RUNNER_ID
            value: "{{ .runnerID }}"
          - name: WIZ_CLIENT_ID
            valueFrom:
              secretKeyRef:
                name: {{ .Values.agent.secretName }}
                key: clientId
          - name: WIZ_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                name: {{ .Values.agent.secretName }}
                key: clientSecret
          - name: OUTPOST_LITE_RUNNER_REGION
            value: "{{ .Values.agent.outpostRegion }}"
          {{- if .Values.service.enabled }}
          - name: OUTPOST_LITE_RUNNER_METRICS_PORT
            value: "{{ .Values.service.metricsPort }}"
          {{- end }}
          - name: OUTPOST_LITE_RUNNER_AUTO_UPDATE
            value: {{ ternary "1" "0" .Values.autoUpdate | quote }}
          {{- if .Values.concurrency }}
          - name: OUTPOST_LITE_RUNNER_CONCURRENCY
            value: "{{ .Values.concurrency }}"
          {{- end }}
          - name: http_proxy
            valueFrom:
              secretKeyRef:
                name: {{ .Values.httpProxyConfiguration.name | quote }}
                key: "httpProxy"
                optional: true
          - name: HTTP_PROXY
            valueFrom:
              secretKeyRef:
                name: {{ .Values.httpProxyConfiguration.name | quote }}
                key: "httpProxy"
                optional: true
          - name: https_proxy
            valueFrom:
              secretKeyRef:
                name: {{ .Values.httpProxyConfiguration.name | quote }}
                key: "httpsProxy"
                optional: true
          - name: HTTPS_PROXY
            valueFrom:
              secretKeyRef:
                name: {{ .Values.httpProxyConfiguration.name | quote }}
                key: "httpsProxy"
                optional: true
          - name: no_proxy
            valueFrom:
              secretKeyRef:
                name: {{ .Values.httpProxyConfiguration.name | quote }}
                key: "noProxyAddress"
                optional: true
          - name: NO_PROXY
            valueFrom:
              secretKeyRef:
                name: {{ .Values.httpProxyConfiguration.name | quote }}
                key: "noProxyAddress"
                optional: true
          - name: SSL_CERT_DIR
            value: "/usr/local/share/ca-certificates/:/certificates/"
          {{- if .Values.service.enabled }}
          ports:
            - name: metrics
              containerPort: {{ .Values.service.metricsPort }}
              protocol: TCP
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          securityContext:
            capabilities:
              add:
              - SYS_ADMIN
            seLinuxOptions:
              type: spc_t
          volumeMounts:
            - mountPath: /var/wiz
              name: working-dir
            - mountPath: /usr/local/share/ca-certificates/
              name: ca-certificate
              readOnly: true
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: working-dir
          emptyDir: {}
        - name: ca-certificate
          secret:
            defaultMode: 420
            secretName: {{ .Values.httpProxyConfiguration.name | quote }}
            items:
              - key: caCertificate
                path: root.crt
            optional: true
---
{{- end }}
{{- end }}
{{- end }}
