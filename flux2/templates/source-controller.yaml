# based on: https://github.com/fluxcd/source-controller/blob/main/config/manager/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: source-controller
  labels:
    {{- include "flux2.labels" . | nindent 4 }}
    control-plane: controller
spec:
  type: ClusterIP
  selector:
    app: source-controller
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http
  selector:
    app: source-controller
  type: ClusterIP
---
# based on: https://github.com/fluxcd/source-controller/blob/main/config/manager/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: source-controller
  labels:
    app.kubernetes.io/instance: flux-system
    app.kubernetes.io/version: {{ .Chart.Version }}
    control-plane: controller
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: source-controller
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: source-controller
      annotations:
        {{- if .Values.podAnnotations }}
        {{- with merge .Values.defaultPodAnnotations .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- else }}
        {{- toYaml .Values.defaultPodAnnotations | nindent 8 }}
        {{- end }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: 10
      securityContext:
        # Required for AWS IAM Role bindings
        # https://docs.aws.amazon.com/eks/latest/userguide/iam-roles-for-service-accounts-technical-overview.html
        fsGroup: 1337
      containers:
      - name: manager
        image: "{{ .Values.image.repository }}/{{ .Values.image.sourceController.name }}:{{ .Values.image.sourceController.tag }}"
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          capabilities:
            drop: [ "ALL" ]
          seccompProfile:
            type: RuntimeDefault
        ports:
          - containerPort: 9090
            name: http
            protocol: TCP
          - containerPort: 8080
            name: http-prom
            protocol: TCP
          - containerPort: 9440
            name: healthz
            protocol: TCP
        env:
          - name: RUNTIME_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        args:
          - --watch-all-namespaces
          - --log-level=error
          - --log-encoding=json
          - --enable-leader-election
          - --storage-path=/data
          - --storage-adv-addr=source-controller.$(RUNTIME_NAMESPACE).svc.cluster.local
        livenessProbe:
          httpGet:
            port: healthz
            path: /healthz
        readinessProbe:
          httpGet:
            port: http
            path: /
        resources:
          limits:
            cpu: 1000m
            memory: 2Gi
          requests:
            cpu: 50m
            memory: 64Mi
        volumeMounts:
          - name: data
            mountPath: /data
          - name: tmp
            mountPath: /tmp
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: source-controller
      volumes:
        - name: data
          emptyDir: {}
        - name: tmp
          emptyDir: {}
